#
# type: mjpeg, h.264, h.265
# cbr, vbr, etc
#
# width 
# height
# target_fps
#
# gop
#

venc:
    get:
        summary: 'Show all encoders'
        tags:
            - venc
        operationId: 'vencShow'
        responses:
                '200':
                    description: 'Success'
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Encoder"
    post:
        summary: 'Create encoder'
        tags:
            - venc
        operationId: 'vencCreate'
        description: |
            This API method is overloaded. 
            As we want this method to work for all combinations of encoder type + encoder mode + MPP version,
            we described request parameters as composition of all avalible params. But not all params are taked 
            into account in each particular case.
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        $ref: "#/components/schemas/Encoder"
                        #type: object
                        #required:
                        #    - pet_type
                        #properties:
                        #    pet_type:
                        #        type: string
                        #discriminator:
                        #    propertyName: pet_type
                        #    mapping:
                        #        dog: "#/components/schemas/Dog"
                        #        cat: "#/components/schemas/Cat"
                        #        lizard: "#/components/schemas/Lizard"
        responses:
            "200":
                description: "Success"

venc/{id}:    
    parameters:
        - name: id
          in: path
          schema:
            type: int
          description: Encoder id
          required: true

    get:
        summary: 'Show ecnoder information'
        tags:
            - venc
        operationId: 'vencIdShow'
        responses:
            "200":
                description: "Success"
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Encoder"
            "404":
                description: "Encoder not found"
    put:
        summary: 'Change encoder runtime settings'
        tags:
            - venc
        operationId: 'vencIdChange'
        requestBody:
            required: true
            content:
                application/json:
                    schema:
                        type: object
                        properties:
                            gop: 
                                $ref: "#/components/schemas/gop"
                            dynamic:
                                oneOf:
                                    - $ref: "#/components/schemas/EncoderCbrParams"
                                    - $ref: "#/components/schemas/EncoderVbrParams"
                                    - $ref: "#/components/schemas/EncoderAVbrParams"
                                    - $ref: "#/components/schemas/EncoderQVbrParams"
                                    - $ref: "#/components/schemas/EncoderFixQpParams"
        responses:
            "200":
                description: "Settings changed"
                #content:
                #    application/json:
                #        schema:
                #            oneOf:
                #                - $ref: "#/components/schemas/EncoderCbrParams"
                #                - $ref: "#/components/schemas/EncoderVbrParams"
                #                - $ref: "#/components/schemas/EncoderAVbrParams"
                #                - $ref: "#/components/schemas/EncoderQVbrParams"
                #                - $ref: "#/components/schemas/EncoderFixQpParams"
            "404":
                description: "Encoder not found"
    delete:
        summary: 'Stop encoder'
        tags:
            - venc
        operationId: 'vencIdDelete'
        responses:
            "200":
                description: "Encoder deleted"
            "404":
                description: "Encoder not found"

components:
    schemas:
        #Pet:
        #    type: object
        #    required:
        #        - pet_type
        #    properties:
        #        pet_type:
        #            type: string
        #    discriminator:
        #        propertyName: pet_type
        #        mapping:
        #            dog: "#/components/schemas/Dog"
        #            cat: "#/components/schemas/Cat"
        #            lizard: "#/components/schemas/Lizard"
        Dog:
            allOf:
                #- $ref: "#/components/schemas/Pet"
                - type: object
                # all other properties specific to a `Dog`
                  properties:
                    pet_type:
                        type: string
                    bark:
                        type: string
        Cat:
            allOf:
                #- $ref: "#/components/schemas/Pet"
                - type: object
                # all other properties specific to a `Cat`
                  properties:
                    pet_type:
                        type: string
                    name:
                        type: string
        Lizard:
            allOf:
                #- $ref: "#/components/schemas/Pet"
                - type: object
                # all other properties specific to a `Lizard`
                  properties:
                    pet_type:
                        type: string
                    lovesRocks:
                        type: boolean
        EncodersList:
            type: object
            properties:
            #additionalProperties:
                #id:
                    #type: int
                    #description: "Encoder id"
                    #type:
                    #type: string
                    #    description: "Encoder type mjpeg|h.264|h.265"
                    #staticParams:
                    #typeA:
                    #type: string
                test:
                    oneOf:
                        - $ref: '#/components/schemas/staticParams'
                        - $ref: '#/components/schemas/staticParams2'
                          #discriminator:
                          #propertyName: typeA
                        #mapping:
                            #mjpeg: '#/components/schemas/staticParams'
                            #    h264: '#/components/schemas/staticParams2'

                        #dynamicParams:
                        #type: object
                        #description: "Dynamic parameters, can be changed during operation"
                        #properties:
                        #bitrate:
                        #    type: int
        Encoder:
                  type: object
                  description: "General Encoder struct"
                  required:
                        - type
                        - profile
                  properties:
                        type:
                            type: string
                            enum: 
                                - mjpeg
                                - h264
                                - h265
                            description: |
                                |family     |types              |
                                |-----------|-------------------|
                                |hi3516av100|mjpeg, h.264, h265 |
                                |hi3516av200|mjpeg, h.264, h265 |
                                |hi3516cv100|mjpeg, h.264       |
                                |hi3516cv200|mjpeg, h.264       |
                                |hi3516cv300|mjpeg, h.264, h.265|
                                |hi3516cv500|mjpeg, h.264, h.265|
                                |hi3516ev200|mjpeg, h.264, h.265|
                                |hi3519av100|mjpeg, h.264, h.265|
                                |hi3559av100|mjpeg, h.264, h.265|
                        profile:
                            type: string
                            enum:
                                - baseline
                                - main
                                - main10
                                - high
                            description: |
                                |family     |mjpeg   |h.264               |h.265       |
                                |-----------|--------|--------------------|------------|
                                |hi3516av100|baseline|baseline, main, high|main        |
                                |hi3516av200|baseline|baseline, main, high|main        |
                                |hi3516cv100|baseline|baseline, main      |-           |
                                |hi3516cv200|baseline|baseline, main, high|-           |
                                |hi3516cv300|baseline|baseline, main, high|main        |
                                |hi3516cv500|baseline|baseline, main, high|main        |
                                |hi3516ev200|baseline|?                   |?           |
                                |hi3519av100|baseline|baseline, main, high|main        |
                                |hi3559av100|baseline|baseline, main, high|main, main10|
                        static:
                            type: object
                            description: |
                                This parameters can`t be changed during operation.
                            properties:
                                width:
                                    type: integer
                                    minimum: 100
                                    multipleOf: 2
                                    description: |
                                        Width of picture.
                                        Should be <= width of soure channel.
                                height:
                                    type: integer
                                    minimum: 100
                                    multipleOf: 2
                                    description: |
                                        Height of picture.
                                        Should be <= height of source channel.
                                fps:
                                    type: integer
                                    minimum: 1
                                    description: |
                                        Frames per second.
                                        Should be <= fps of source channel.
                        gop:
                            $ref: "#/components/schemas/gop"
                            #gopstrategy:
                            #$ref: "#/components/schemas/gopstrategy"
                            #fffff: 
                            #trata: 
                            #$ref: "#/components/schemas/EncoderDynamic"
                        mode:
                            type: string
                            enum:
                                - cbr
                                - vbr
                                - fixqp
                                - avbr
                                - qvbr
                                - qmap
                            description: |
                                |mpp| modes                           |
                                |---|---------------------------------|
                                |v1 |cbr, vbr, fixqp                  |
                                |v2 |cbr, vbr, fixqp, avbr            |
                                |v3 |cbr, vbr, fixqp, avbr, qvbr, qmap|
                                |v4 |cbr, vbr, fixqp, avbr, qmap      |

                                |family     |modes                             |
                                |-----------|----------------------------------|
                                |hi3516av100|???                               |
                                |hi3516av200|cbr, vbr, fixqp, avbr, qvbr, qmap |
                                |hi3516cv100|cbr, vbr, fixqp                   |
                                |hi3516cv200|???                               |
                                |hi3516cv300|cbr, vbr, fixqp, avbr, qvbr, qmap |
                                |hi3516cv500|???                               |
                                |hi3516ev200|???                               |
                                |hi3519av100|???                               |
                                |hi3559av100|???                               |

                        dynamic:
                            description: "TEasdfsd jklsklg jklsfg"
                            oneOf:
                                - $ref: "#/components/schemas/EncoderCbrParams"
                                - $ref: "#/components/schemas/EncoderVbrParams"
                                - $ref: "#/components/schemas/EncoderAVbrParams"
                                - $ref: "#/components/schemas/EncoderQVbrParams"
                                - $ref: "#/components/schemas/EncoderFixQpParams"
                            #type: object
           #discriminator:
           #             propertyName: mode
           #             mapping:
           #                 cbr: "#/components/schemas/EncoderCbr"
           #                 vbr: "#/components/schemas/EncoderVbr"
           #                 avbr: "#/components/schemas/EncoderAVbr"
           #                 qvbr: "#/components/schemas/EncoderQVbr"
           #                 fixqp: "#/components/schemas/EncoderFixQp"

        EncoderDynamic:
            type: object
            required:
                - mode
            properties:
                mode:
                    type: string
                    enum:
                        - cbr
                        - vbr
                        - fixqp
                        - avbr
                        - qvbr
                        - qmap
                    description: |
                        |mpp| modes                           | 
                        |---|---------------------------------|
                        |v1 |cbr, vbr, fixqp                  |
                        |v2 |cbr, vbr, fixqp, avbr            |
                        |v3 |cbr, vbr, fixqp, avbr, qvbr, qmap|
                        |v4 |cbr, vbr, fixqp, avbr, qmap      |
            discriminator:
                propertyName: mode
                mapping:
                    cbr: "#/components/schemas/EncoderCbr"
                    vbr: "#/components/schemas/EncoderVbr"
                        #   avbr: "#/components/schemas/EncoderAVbr"
                        #    qvbr: "#/components/schemas/EncoderQVbr"
                        # fixqp: "#/components/schemas/EncoderFixQp"
                    #qmap: ....
        EncoderCbr:
            allOf:
                - $ref: "#/components/schemas/Encoder"
                - type: object
                  properties:
                      dynamic:
                          $ref: "#/components/schemas/EncoderCbrParams"
        EncoderCbrParams:
            #type: object
                  #properties:
                      #      dynamic:
                            type: object
                            description: "Constant bitrate params"
                            properties:
                                bitrate:
                                    type: integer
                                    description: "Target bitrate"
                                stattime:
                                    type: integer
                                    description: "TODO"
                                fluctuate:
                                    type: integer
                                    description: "TODO"
        EncoderVbr:
            allOf:
                - $ref: "#/components/schemas/Encoder"
                - type: object
                  properties:
                      dynamic:
                        $ref: "#/components/schemas/EncoderVbrParams"

        EncoderVbrParams:
            #type: object
            #properties:
            #dynamic:
                            type: object
                            description: "Variable bitrate params"
                            properties:
                                bitrate:
                                    type: integer
                                    description: "Maximum target bitrate"
                                stattime:
                                    type: integer
                                    description: "TODO"
                                minIqp:
                                    type: integer
                                maxqp:
                                    type: integer
                                minqp:
                                    type: integer
        EncoderAVbr:
            allOf:
                - $ref: "#/components/schemas/Encoder"
                - type: object
                  properties:
                      dynamic:
                          $ref: "#/components/schemas/EncoderAVbrParams"
        EncoderAVbrParams:
            #     type: object
            #      properties:
            #            dynamic:
                            type: object
                            description: "TODO"
                            properties:
                                bitrate:
                                    type: integer
                                    description: "TODO"
                                stattime:
                                    type: integer
                                    description: "TODO"
        EncoderQVbr:
            allOf:
                - $ref: "#/components/schemas/Encoder"
                - type: object
                  properties:
                      dynamic:
                          $ref: "#/components/schemas/EncoderQVbrParams"
        EncoderQVbrParams:
            #     type: object
            #      properties:
            #            dynamic:
                            type: object
                            description: "TODO"
                            properties:
                                bitrate:
                                    type: integer
                                    description: "Target bitrate"
                                stattime:
                                    type: integer
                                    description: "TODO"
        EncoderFixQp:
            allOf:
                - $ref: "#/components/schemas/Encoder"
                - type: object
                  properties:
                      dynamic:
                        $ref: "#/components/schemas/EncoderFixQpParams"
        EncoderFixQpParams:
                  #type: object
                  #properties:
                  #      dynamic:
                            type: object
                            description: "Fix QP params"
                            properties:
                                iqp:
                                    type: integer
                                    description: "TODO"
                                pqp:
                                    type: integer
                                    description: "TODO"
                                bqp:
                                    type: integer
                                    description: "TODO"

                        #EncoderMjpeg:
                        #allOf:
                        #- $ref: "#/components/schemas/Encoder"
                        #- type: object
                        #description: "MJPEG Encoder struct"
                        #properties:
                        #mjpeg:
                        #type: string
                        #description: "mjpeg value"
                        #test:
                        #type: string
                        #enum: 
                        #    - a
                        #    - b
                              #description: "test enum"

                        #EncoderH264:
                        #allOf:
                        #- $ref: "#/components/schemas/Encoder"
                        #- type: object
                        #description: "H264 Encoder struct"
                        #properties:
                        #h264:
                        #type: string
                        #description: "h264 value"
        gop:
            type: object
            description: |
                Big description for GOP

                |family     |modes                             |
                |-----------|----------------------------------|
                |hi3516av100|???                               |
                |hi3516av200|normalp, dualp, smartp, intrar    |
                |hi3516cv100|???                               |
                |hi3516cv200|???                               |
                |hi3516cv300|???                               |
                |hi3516cv500|???                               |
                |hi3516ev200|???                               |
                |hi3519av100|???                               |
                |hi3559av100|???                               |
            properties:
                mode:
                    type: string
                    description: Type of gop stategy
                    enum:
                        - normalp
                        - dualp
                        - smartp
                        - bipredb
                        - intrar
                    default: normalp
                period:
                    type: integer
                    description: |
                        Insert key frame each GOP frames
                        > Applicable only for **h.264, h.265** encoders.
                params:
                    description: |
                        Overall description of params for exact encoding strategies
                    oneOf:
                        - $ref: "#/components/schemas/gopNormalP"
                        - $ref: "#/components/schemas/gopDualP"
                        - $ref: "#/components/schemas/gopSmartP"
                        - $ref: "#/components/schemas/gopIntraR"

        gopNormalP:
            type: object
            description: |
                Describe here normalP strategy
            properties:
                ipqdelta:
                    type: integer
        gopDualP:
            type: object
            description: |
                Describe here dualP strategy
            properties:
                PInterval:
                    type: integer
                PQpDelta:
                    type: integer
                IPQpDelta:
                    type: integer
        gopSmartP:
            type: object
            description: |
                Describe here SmartP strategy
            properties:
                BgInterval:
                    type: integer
                BgQpDelta:
                    type: integer
                ViQpDelta:
                    type: integer
        gopIntraR:
            type: object
            description: |
                Describe here Intra Refresh strategy
            properties:
                RefreshLineNum:
                    type: integer
                ReqIQp:
                    type: integer
        gopstrategy:
            type: object
            description: |
                TODO GOP STRATEGY

                > Applicable for mpp: **v3**, TODO
            properties:
                select:
                    type: string
                    enum:
                        - gops1
                        - gops2
            discriminator:
                propertyName: select
                mapping:
                    gops1: "#/components/schemas/gops1"
                    gops2: "#/components/schemas/gops2"
        gops1:
            allOf:
                - $ref: "#/components/schemas/gopstrategy"
                - type: object
                  properties:
                      test1:
                          type: integer

        gops2:
            allOf:
                - $ref: "#/components/schemas/gopstrategy"
                - type: object
                  properties:
                      test2:
                          type: integer



        staticParams:
            type: object
            description: "Static parameters, can`t be changed during operation"
            required:
                - typeA
            properties:
                typeA:
                    type: string
                    description: "test"
                width:
                    type: int
                    description: "Width of image, pixels"
                height:
                    type: int
                    description: "Height of image, pixels"
                fps:
                    type: int
                    description: "Frames per second"

        staticParams2:
            type: object
            description: "Static parameters 2, can`t be changed during operation"
            required:
                - typeA
            properties:
                typeA:
                    type: string
                    description: "test"
                width2:
                    type: int
                    description: "Width of image, pixels"
                height2:
                    type: int
                    description: "Height of image, pixels"
                fps2:
                    type: int
                    description: "Frames per second"


description: |
    Encoder can be Jpeg/Mjpeg, H264, H265.
    There are static and dynamic parameters that can and should be setuped during creation.
    Dynamic parameters can be changed during encoder operation, static can`t be.
   
    ## Test 1

    Amount of encoders is limited, due to hardware limitations.

    ## Test 2

    Encoder is binded to some channel. That channel shoud be created before encoder creation.
