/******************************************************************************

  Copyright (C), 2016, Hisilicon Tech. Co., Ltd.

 ******************************************************************************
  File Name     : imx307_cmos_ex.h
  Version       : Initial Draft
  Author        : Hisilicon multimedia software group
  Created       : 2018/07/23
  Description   : this file was private for IMX307 master mode sensor
  History       :
  1.Date        :
    Author      :
    Modification: Created file
******************************************************************************/
#ifndef __IMX307_CMOS_EX_H_
#define __IMX307_CMOS_EX_H_

#ifdef __cplusplus
#if __cplusplus
extern "C" {
#endif
#endif


static const ISP_CMOS_DPC_S g_stCmosDpc =
{
    /* ISO */
    /*100, 200, 400, 800, 1600, 3200, 6400, 12800, 25600, 51200, 102400, 204800, 409600, 819200, 1638400, 3276800*/
    {   0,   0,   0, 152,  220,  220,  220,   220,   220,   220,    152,    152,    152,    152,     152,     152}, /*au16Strength[16]*/
    {   0,   0,   0,   0,    0,    0,    0,     0,     0,     0,     50,     50,     50,     50,      50,      50}, /*au16BlendRatio[16]*/
};

static const ISP_CMOS_GE_S g_stIspGe =
{
    /*For GE*/
    1,    /*bEnable*/
    13,    /*u8Slope*/
    13,    /*u8SensiSlope*/
    4800, /*u16SensiThr*/
    /* ISO */
    /*   1,    2,      4,     8,    16,    32,    64,   128,   256,   512,  1024,  2048,  4096,  8192, 16384, 32768*/
    { 4800, 4800,   4800,  4800,  4960,  4960,  4960,  4960,  5120,  5120,  5120,  5120,  5280,  5280,  5280,  5280}, /*au16Threshold[ISP_AUTO_ISO_STRENGTH_NUM]*/
    {  128,  128,    128,   128,   129,   129,   129,   129,   130,   130,   130,   130,   131,   131,   131,   131}, /*au16Strength[ISP_AUTO_ISO_STRENGTH_NUM]*/
    {16384, 16384, 16384, 16384, 16384, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768, 32768} /*au16NpOffset[ISP_AUTO_ISO_STRENGTH_NUM]*/
};

static const ISP_CMOS_GE_S g_stIspWdrGe =
{
    /*For GE*/
    1,    /*bEnable*/
    13,    /*u8Slope*/
    13,    /*u8SensiSlope*/
    4800, /*u16SensiThr*/

    /* ISO */
    /*  1,    2,    4,    8,   16,   32,   64,   128,  256,  512, 1024, 2048, 4096, 8192,16384, 32768*/
    { 4800, 4800, 4800, 4800, 4960, 4960, 4960, 4960, 5120, 5120, 5120, 5120, 5280, 5280, 5280, 5280}, /*au16Threshold[ISP_AUTO_ISO_STRENGTH_NUM]*/
    {  128,  128,  128,  128,  129,  129,  129,  129,  130,  130,  130,  130,  131,  131,  131,  131}, /*au16Strength[ISP_AUTO_ISO_STRENGTH_NUM]*/
    {16384,16384,16384,16384,16384,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768,32768} /*au16NpOffset[ISP_AUTO_ISO_STRENGTH_NUM]*/
};

static const ISP_CMOS_DEMOSAIC_S g_stIspDemosaic =
{
    1,    //bEnable
    /*au8NonDirStr*/
    /* 1,    2,    4,    8,   16,   32,   64,   128,   256,  512, 1024, 2048, 4096, 8192, 16384, 32768*/
    { 64,   64,   64,   64,   64,   64,   64,    64,    64,   64,   64,   64,   64,   64,    64,    64},
    /*au8NonDirLFDetailEhc*/
    { 32,   30,   30,   28,   28,   28,   24,    22,    20,   18,   18,   18,   18,   18,    18,    18},
    /*au8NonDirHFDetailEhc*/
    {  3,    3,    3,    5,    7,    7,    7,     7,     7,    7,    7,    7,    7,    7,     7,     7},
    /*au8DetailSmoothRange*/
    {  1,    2,    2,    3,    3,    3,    4,     4,     5,    5,    7,    7,    7,    7,     7,     7},
};

static const ISP_CMOS_DEMOSAIC_S g_stIspDemosaicWdr =
{
    1,    //bEnable
    /*au8NonDirStr*/
    /* 1,    2,    4,    8,   16,   32,   64,   128,   256,  512, 1024, 2048, 4096, 8192, 16384, 32768*/
    { 64,   64,   64,   48,   48,   48,   32,    32,    32,   32,   16,   16,   16,   16,    16,    16},
    /*au8NonDirLFDetailEhc*/
    { 40,   40,   40,   40,   32,   24,   18,    16,    16,   16,   16,   16,   16,   16,    16,    16},
    /*au8NonDirHFDetailEhc*/
    {  3,    3,    3,    3,    3,    3,    5,     5,     5,    5,    5,    5,    5,    5,     5,     5},
    /*au8DetailSmoothRange*/
    {  4,    4,    4,    4,    4,    4,    5,     5,     5,    5,    7,    7,    7,    7,     7,     7},
};

static const ISP_CMOS_ANTIFALSECOLOR_S g_stIspAntiFalseColor =
{
    1,    /*bEnable*/
    /* 1,    2,    4,    8,   16,   32,   64,   128,   256,  512, 1024, 2048, 4096, 8192, 16384, 32768*/
    { 10,   10,    8,    8,    7,    7,    7,     6,     6,    6,    5,    4,    3,    2,     1,     0}, /*au8AntiFalseColorThreshold*/
    {  8,    8,    8,    8,    7,    7,    7,     6,     6,    6,    5,    4,    3,    2,     1,     0}, /*au8AntiFalseColorStrength*/
};

static const ISP_CMOS_ANTIFALSECOLOR_S g_stIspWdrAntiFalseColor =
{
    1,    /*bEnable*/
    /* 1,    2,    4,    8,   16,   32,   64,   128,  256,  512, 1024, 2048, 4096, 8192, 16384, 32768*/
    {  4,    4,    4,    4,    4,    4,    4,     4,    4,    4,    4,    4,    3,    2,     1,     0}, /*au8AntiFalseColorThreshold*/
    {  4,    4,    4,    4,    4,    4,    4,     4,    4,    4,    4,    4,    3,    2,     1,     0}, /*au8AntiFalseColorStrength*/
};

/***BAYER NR**/
static ISP_CMOS_NOISE_CALIBRATION_S g_stIspNoiseCalibratio =
{
    12,     //Calibration Lut Num
    /*************Calibration LUT Table*************/
    {
        {106.0f,    0.017536f,  0.024127f},
        {117.0f,    0.01939f,   0.025791f},
        {227.0f,    0.037736f,  0.040171f},
        {470.0f,    0.07777f,   0.084227f},
        {1747.0f,   0.287293f,  0.379383f},
        {4002.0f,   0.655649f,  1.155996f},
        {6491.0f,   1.065072f,  2.335924f},
        {15969.0f,  2.720477f,  10.456544f},
        {29738.0f,  5.172001f,  30.797239f},
        {59343.0f,  10.782349f, 100.457473f},
        {103124.0f, 21.000038f, 210.387179f},
        {238817.0f, 28.774144f, 257.811098f}
    }
    /*********************************************/
};
static const ISP_CMOS_BAYERNR_S g_stIspBayerNr =
{
    1,      //bEnable
    0,      //bBnrMonoSensorEn
    0,      //bNrLscEnable
    96,     //u8BnrLscMaxGain
    256,    //u16BnrLscCmpStrength
    {86,80,80,70,70,65,65,60,50,50,50,50,50,50,40,40},    //FineStr
    {
        {1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3}, //ChromaStrR
        {0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2}, //ChromaStrGr
        {0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2}, //ChromaStrGb
        {1, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3}  //ChromaStrB
    },
    {0, 0, 0, 0},                //WDRFrameStr
    {0, 0, 0, 0},                //FusionFrameStr
    {
        {80, 100, 110, 110, 110, 120, 130, 150, 160, 170, 170, 170, 170, 170, 170, 170},    //CoarseStrR
        {80, 100, 110, 110, 110, 120, 130, 150, 160, 170, 170, 170, 170, 170, 170, 170},    //CoarseStrGR
        {80, 100, 110, 110, 110, 120, 130, 150, 160, 170, 170, 170, 170, 170, 170, 170},    //CoarseStrGB
        {80, 100, 110, 110, 110, 120, 130, 150, 160, 170, 170, 170, 170, 170, 170, 170}     //CoarseStrB
    },
    {50, 50, 60, 65, 70, 75, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60},     //lutCoringWeight
    {
        90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,\
        90,91,92,93,94,95,96,97,98,99,100,100,100,100,100,100,100,100
    },   //CoringRatio
};

static const ISP_CMOS_BAYERNR_S g_stIspBayerNrWdr2To1 =
{
    1,      //bEnable
    0,      //bBnrMonoSensorEn
    0,      //bNrLscEnable
    96,     //u8BnrLscMaxGain
    256,    //u16BnrLscCmpStrength
    {100, 100, 95, 90, 90, 75, 70, 65, 60, 55, 50, 40, 40, 30, 30, 30},     //FineStr
    {
        {0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3}, //ChromaStrR
        {0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2}, //ChromaStrGr
        {0, 0, 0, 0, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2}, //ChromaStrGb
        {0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3} //ChromaStrB
    },
    { 9, 7, 5, 0},              //WDRFrameStr
    {16, 6, 0, 0},               //FusionCoarseStr
    {
        {100, 110, 110, 110, 110, 110, 110, 140, 160, 160, 180, 200, 200, 200, 200, 200},    //CoarseStrR
        {100, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110},    //CoarseStrGR
        {100, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110, 110},    //CoarseStrGB
        {100, 110, 110, 110, 110, 120, 120, 140, 160, 160, 180, 200, 200, 200, 200, 200}     //CoarseStrB
    },
    {15,15,15,15,15,15,15,15,15,15,15,15,50,50,50,50},     //lutCoringWeight
    {
        90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,\
        90,91,92,93,94,95,96,97,98,99,100,100,100,100,100,100,100,100
    },  //coring ratio
};


static const ISP_CMOS_LDCI_S g_stIspLdci =
{
    /*bEnable*/
    1,
    /*u8GaussLPFSigma*/
    36,

    /* 1,    2,    4,    8,   16,   32,   64,   128,   256,  512, 1024, 2048, 4096, 8192, 16384, 32768*/
    /*au8HePosWgt*/
    { 50,   50,   50,   40,   40,    0,    0,     0,     0,    0,    0,    0,    0,    0,     0,     0},

    /*au8HePosSigma*/
    { 80,   80,   72,   72,   72,   64,   24,    20,    12,    8,    6,    2,    1,    1,     1,     1},

    /*au8HePosMean*/
    {  0,    0,   40,   50,   60,   60,   60,    60,    60,   60,   60,   60,   60,   60,    60,    60},

    /*au8HeNegWgt*/
    { 50,   45,   45,   45,   45,   40,   40,    30,    20,   10,    0,    0,    0,    0,     0,     0},

    /*au8HeNegSigma*/
    { 80,   80,   80,   80,   80,   72,   64,    54,    36,    8,    6,    2,    1,    1,     1,     1},

    /*au8HeNegMean*/
    {128,  128,   50,   60,   70,   70,   70,    70,    70,   70,   70,   70,   70,   70,    70,    70},

    /*au16BlcCtrl*/
    { 20,   20,   20,   20,   30,   30,   30,    30,    30,   30,   30,   30,   30,   30,    30,    30}
};

static const ISP_CMOS_LDCI_S g_stIspWdrLdci =
{
    /*bEnable*/
    1,

    /*u8GaussLPFSigma*/
    36,

    /* 1,    2,    4,    8,   16,   32,   64,   128,   256,  512, 1024, 2048, 4096, 8192, 16384, 32768*/
    /*au8HePosWgt*/
    { 16,   16,   12,    8,    4,    0,    0,     0,     0,    0,    0,    0,    0,    0,     0,     0},

    /*au8HePosSigma*/
    { 80,   80,   80,   80,   80,   80,   80,    80,    80,   80,   80,   80,   80,   80,    80,    80},

    /*au8HePosMean*/
    { 32,   32,   32,   32,   32,   32,   32,    32,    32,   32,   32,   32,   32,   32,    32,    32},

    /*au8HeNegWgt*/
    { 32,   32,   32,   45,   45,   24,   12,     8,     6,    0,    0,    0,    0,    0,     0,     0},

    /*au8HeNegSigma*/
    { 80,   80,   80,   80,   80,   80,   80,    80,    80,   80,   80,   80,   80,   80,    80,    80},

    /*au8HeNegMean*/
    {180,  180,  180,    0,    0,    0,    0,     0,     0,    0,    0,    0,    0,    0,     0,     0},

    /*au16BlcCtrl*/
    { 20,   20,   20,   20,   30,   30,   30,    30,    30,   30,   30,   30,   30,   30,    30,    30}
};

static const ISP_CMOS_GAMMA_S g_stIspGamma =
{
    /* au16Gamma[GAMMA_EXT_NODE_NUMBER] */
    {
        0,19,38,58,77,97,117,137,156,176,195,215,234,253,272,290,308,326,344,364,383,401,419,436,453,470,487,504,521,539,557,576,
        596,617,627,637,648,658,669,679,690,701,712,723,734,745,757,768,779,791,803,815,827,839,851,863,876,888,901,914,927,940,
        953,967,981,987,994,1001,1008,1015,1022,1029,1036,1043,1051,1058,1066,1073,1081,1088,1096,1104,1111,1119,1127,1135,1143,
        1150,1158,1166,1174,1182,1190,1198,1206,1214,1222,1230,1238,1246,1254,1262,1270,1278,1286,1294,1302,1310,1318,1326,1334,
        1341,1349,1357,1365,1372,1380,1387,1395,1402,1409,1417,1424,1431,1438,1445,1452,1459,1466,1472,1479,1485,1492,1499,1505,
        1511,1518,1524,1531,1537,1543,1549,1556,1562,1568,1574,1580,1586,1592,1598,1604,1610,1616,1622,1628,1634,1639,1645,1651,
        1657,1663,1668,1674,1680,1685,1691,1697,1702,1708,1713,1719,1724,1730,1736,1741,1747,1752,1758,1763,1769,1774,1780,1785,
        1790,1796,1801,1807,1812,1818,1823,1829,1834,1840,1845,1850,1856,1861,1867,1872,1877,1883,1888,1893,1899,1904,1909,1915,
        1920,1925,1930,1936,1941,1946,1951,1957,1962,1967,1972,1977,1982,1988,1993,1998,2003,2008,2013,2018,2023,2028,2033,2038,
        2043,2048,2053,2058,2063,2068,2073,2078,2082,2087,2092,2097,2102,2107,2111,2116,2121,2126,2131,2135,2140,2145,2149,2154,
        2159,2164,2168,2173,2177,2182,2187,2191,2196,2200,2205,2210,2214,2219,2223,2228,2232,2237,2241,2246,2250,2254,2259,2263,
        2268,2272,2276,2281,2285,2289,2294,2298,2302,2307,2311,2315,2319,2324,2328,2332,2336,2340,2344,2349,2353,2357,2361,2365,
        2369,2373,2377,2381,2385,2389,2393,2397,2401,2405,2409,2413,2416,2420,2424,2428,2432,2436,2439,2443,2447,2450,2454,2458,
        2461,2465,2468,2472,2475,2479,2482,2486,2489,2493,2496,2500,2503,2506,2510,2513,2516,2520,2523,2526,2529,2533,2536,2539,
        2542,2546,2549,2552,2555,2558,2561,2565,2568,2571,2574,2577,2580,2583,2586,2590,2593,2596,2599,2602,2605,2608,2611,2614,
        2617,2621,2624,2627,2630,2633,2636,2639,2642,2646,2649,2652,2656,2659,2662,2665,2668,2671,2674,2677,2680,2683,2686,2690,
        2693,2696,2699,2702,2705,2708,2711,2714,2717,2720,2723,2726,2729,2732,2735,2738,2741,2744,2747,2750,2753,2756,2759,2762,
        2764,2767,2770,2773,2776,2779,2782,2785,2788,2791,2794,2796,2799,2802,2805,2808,2811,2814,2817,2820,2822,2825,2828,2831,
        2834,2837,2840,2843,2845,2848,2851,2853,2856,2859,2862,2865,2868,2871,2874,2877,2879,2882,2885,2887,2890,2893,2896,2899,
        2901,2904,2907,2909,2912,2915,2918,2920,2923,2926,2929,2932,2934,2937,2940,2942,2945,2948,2951,2954,2956,2959,2962,2964,
        2966,2969,2972,2974,2977,2980,2983,2986,2988,2991,2994,2996,2998,3001,3004,3006,3009,3012,3015,3018,3020,3023,3026,3028,
        3031,3033,3035,3038,3040,3043,3046,3048,3051,3054,3057,3059,3062,3064,3066,3069,3071,3074,3077,3080,3082,3085,3088,3090,
        3093,3095,3097,3100,3102,3105,3108,3110,3113,3115,3117,3120,3122,3125,3128,3130,3133,3135,3138,3140,3143,3145,3147,3150,
        3152,3155,3158,3160,3163,3165,3167,3170,3172,3175,3178,3180,3183,3185,3187,3189,3192,3194,3196,3199,3201,3204,3207,3209,
        3211,3214,3217,3219,3222,3224,3226,3228,3231,3233,3235,3238,3241,3243,3245,3247,3250,3252,3254,3257,3260,3262,3264,3267,
        3269,3271,3273,3276,3279,3281,3283,3286,3288,3290,3292,3295,3298,3300,3302,3305,3307,3309,3311,3313,3316,3318,3320,3322,
        3325,3327,3329,3332,3335,3337,3339,3342,3344,3346,3348,3350,3353,3355,3357,3360,3362,3364,3366,3368,3371,3373,3375,3378,
        3380,3382,3384,3386,3389,3391,3393,3396,3398,3400,3402,3405,3407,3409,3411,3413,3416,3418,3420,3423,3425,3427,3429,3431,
        3434,3436,3438,3441,3443,3445,3447,3449,3452,3454,3456,3459,3461,3463,3465,3467,3469,3471,3473,3475,3478,3480,3482,3484,
        3487,3489,3491,3494,3496,3498,3500,3502,3504,3506,3508,3511,3513,3515,3517,3519,3521,3523,3525,3528,3530,3532,3534,3536,
        3538,3540,3542,3545,3547,3549,3551,3553,3555,3557,3559,3561,3564,3566,3568,3570,3572,3574,3576,3578,3581,3583,3585,3587,
        3589,3591,3593,3595,3598,3600,3602,3604,3606,3608,3610,3612,3614,3616,3618,3620,3622,3624,3626,3628,3631,3633,3635,3637,
        3639,3641,3643,3645,3647,3649,3651,3653,3655,3657,3659,3661,3663,3665,3667,3670,3672,3674,3676,3678,3680,3682,3684,3686,
        3688,3690,3692,3694,3696,3698,3700,3702,3704,3706,3708,3710,3712,3714,3716,3718,3720,3722,3724,3726,3728,3730,3732,3734,
        3736,3738,3740,3742,3744,3746,3748,3750,3752,3754,3756,3758,3760,3762,3764,3766,3767,3769,3771,3773,3775,3777,3779,3781,
        3783,3785,3787,3789,3791,3793,3795,3797,3799,3801,3803,3804,3806,3808,3810,3812,3814,3816,3818,3820,3822,3824,3826,3828,
        3830,3832,3834,3836,3837,3839,3841,3843,3845,3847,3849,3851,3853,3855,3857,3858,3860,3862,3864,3866,3868,3870,3872,3873,
        3875,3877,3879,3881,3883,3885,3887,3888,3890,3892,3894,3896,3898,3900,3902,3904,3905,3907,3909,3911,3913,3915,3917,3919,
        3920,3922,3924,3926,3928,3930,3932,3934,3935,3937,3939,3941,3943,3945,3947,3949,3950,3952,3954,3955,3957,3959,3961,3963,
        3965,3967,3969,3971,3972,3974,3976,3977,3979,3981,3983,3985,3987,3989,3991,3993,3994,3996,3998,4000,4001,4003,4005,4006,
        4008,4010,4012,4014,4016,4018,4020,4022,4023,4025,4027,4028,4030,4032,4034,4036,4037,4039,4041,4042,4044,4046,4048,4050,
        4052,4054,4056,4058,4059,4061,4063,4064,4066,4068,4070,4072,4073,4075,4077,4078,4080,4082,4084,4086,4087,4089,4091,4092,
        4094,4095
    }
};

static const ISP_CMOS_GAMMA_S g_stIspGammaFSWDR =
{
    {
        0,6,13,20,27,34,40,47,54,61,68,75,82,88,95,102,109,116,123,130,137,144,151,157,164,171,178,185,192,199,206,213,220,226,233,
        240,247,254,261,268,274,281,288,295,301,308,315,322,328,335,342,349,355,362,368,375,382,388,395,401,408,414,421,427,434,440,
        446,453,459,465,471,478,484,490,496,503,509,515,521,527,533,539,545,551,557,563,569,575,581,587,593,599,605,611,617,623,629,
        635,641,647,653,659,664,670,676,682,688,694,700,706,712,718,723,729,735,741,747,753,759,765,771,777,783,789,795,801,806,812,
        819,825,831,837,843,849,855,861,867,873,879,885,891,897,903,909,915,921,927,933,939,946,952,958,964,970,976,982,988,994,1000,
        1006,1012,1018,1024,1030,1036,1042,1049,1055,1061,1067,1073,1079,1085,1091,1097,1103,1109,1115,1121,1127,1133,1139,1144,1150,
        1156,1162,1168,1174,1180,1186,1192,1198,1204,1209,1215,1221,1227,1233,1239,1244,1250,1256,1262,1268,1273,1279,1285,1291,1297,
        1302,1308,1314,1320,1325,1331,1337,1343,1348,1354,1360,1366,1371,1377,1383,1389,1394,1400,1406,1411,1417,1423,1428,1434,1440,
        1445,1451,1457,1462,1468,1473,1479,1485,1490,1496,1502,1507,1513,1518,1524,1530,1535,1541,1546,1552,1557,1563,1569,1574,1580,
        1585,1591,1596,1602,1607,1613,1618,1624,1629,1635,1640,1646,1651,1657,1662,1668,1673,1678,1684,1689,1695,1700,1706,1711,1717,
        1722,1727,1733,1738,1744,1749,1754,1760,1765,1770,1776,1781,1787,1792,1797,1803,1808,1813,1819,1824,1829,1835,1840,1845,1850,
        1856,1861,1866,1872,1877,1882,1887,1893,1898,1903,1908,1914,1919,1924,1929,1934,1940,1945,1950,1955,1960,1966,1971,1976,1981,
        1987,1992,1997,2002,2007,2012,2018,2023,2028,2033,2038,2043,2049,2054,2059,2064,2069,2074,2079,2084,2089,2095,2100,2105,2110,
        2115,2120,2125,2130,2135,2140,2145,2150,2155,2160,2165,2170,2175,2179,2184,2189,2194,2199,2204,2209,2214,2218,2223,2228,2233,
        2238,2242,2247,2252,2256,2261,2266,2271,2275,2280,2285,2289,2294,2299,2303,2308,2313,2317,2322,2326,2331,2335,2340,2345,2349,
        2354,2358,2363,2367,2372,2376,2381,2385,2390,2394,2399,2403,2407,2412,2416,2421,2425,2429,2434,2438,2442,2447,2451,2455,2460,
        2464,2468,2472,2477,2481,2485,2489,2493,2498,2502,2506,2510,2514,2518,2523,2527,2531,2535,2539,2543,2547,2551,2555,2558,2562,
        2566,2570,2574,2578,2582,2585,2589,2593,2597,2601,2604,2608,2612,2616,2619,2623,2627,2631,2634,2638,2642,2646,2649,2653,2657,
        2660,2664,2668,2671,2675,2679,2683,2686,2690,2694,2697,2701,2705,2708,2712,2716,2719,2723,2727,2730,2734,2738,2741,2745,2749,
        2752,2756,2760,2764,2768,2771,2775,2779,2782,2786,2789,2793,2796,2800,2804,2807,2811,2814,2818,2821,2825,2828,2832,2835,2839,
        2842,2846,2849,2853,2856,2860,2863,2867,2870,2873,2877,2880,2884,2887,2891,2894,2897,2901,2904,2908,2911,2914,2918,2921,2924,
        2928,2931,2934,2938,2941,2944,2948,2951,2954,2958,2961,2964,2967,2971,2974,2977,2981,2984,2987,2990,2994,2997,3000,3003,3006,
        3010,3013,3016,3019,3023,3026,3029,3032,3035,3038,3042,3045,3048,3051,3054,3057,3061,3064,3067,3070,3073,3076,3079,3082,3086,
        3089,3092,3095,3098,3101,3104,3107,3110,3113,3116,3119,3122,3125,3129,3132,3135,3138,3141,3144,3147,3150,3153,3156,3159,3162,
        3165,3168,3171,3174,3177,3180,3183,3185,3188,3191,3194,3197,3200,3203,3206,3209,3212,3215,3218,3221,3224,3227,3229,3232,3235,
        3238,3241,3244,3247,3250,3252,3255,3258,3261,3264,3267,3270,3272,3275,3278,3281,3284,3287,3289,3292,3295,3298,3301,3303,3306,
        3309,3312,3315,3317,3320,3323,3326,3328,3331,3334,3337,3339,3342,3345,3348,3350,3353,3356,3359,3361,3364,3367,3370,3372,3375,
        3378,3380,3383,3386,3388,3391,3394,3396,3399,3402,3405,3407,3410,3413,3415,3418,3420,3423,3426,3428,3431,3434,3436,3439,3442,
        3444,3447,3449,3452,3455,3457,3460,3462,3465,3468,3470,3473,3475,3478,3481,3483,3486,3488,3491,3493,3496,3498,3501,3504,3506,
        3509,3511,3514,3516,3519,3521,3524,3526,3529,3531,3534,3536,3539,3541,3544,3546,3549,3551,3554,3556,3559,3561,3564,3566,3569,
        3571,3574,3576,3579,3581,3584,3586,3588,3591,3593,3596,3598,3601,3603,3606,3608,3610,3613,3615,3618,3620,3622,3625,3627,3630,
        3632,3634,3637,3639,3642,3644,3646,3649,3651,3654,3656,3658,3661,3663,3665,3668,3670,3673,3675,3677,3680,3682,3684,3687,3689,
        3691,3694,3696,3698,3701,3703,3705,3708,3710,3712,3714,3717,3719,3721,3724,3726,3728,3731,3733,3735,3737,3740,3742,3744,3747,
        3749,3751,3753,3756,3758,3760,3762,3765,3767,3769,3771,3774,3776,3778,3780,3783,3785,3787,3789,3792,3794,3796,3798,3801,3803,
        3805,3807,3809,3812,3814,3816,3818,3820,3823,3825,3827,3829,3831,3834,3836,3838,3840,3842,3844,3847,3849,3851,3853,3855,3857,
        3860,3862,3864,3866,3868,3870,3873,3875,3877,3879,3881,3883,3885,3888,3890,3892,3894,3896,3898,3900,3902,3905,3907,3909,3911,
        3913,3915,3917,3919,3921,3924,3926,3928,3930,3932,3934,3936,3938,3940,3942,3944,3946,3949,3951,3953,3955,3957,3959,3961,3963,
        3965,3967,3969,3971,3973,3975,3977,3979,3981,3984,3986,3988,3990,3992,3994,3996,3998,4000,4002,4004,4006,4008,4010,4012,4014,
        4016,4018,4020,4022,4024,4026,4028,4030,4032,4034,4036,4038,4040,4042,4044,4046,4048,4050,4052,4054,4056,4058,4060,4062,4064,
        4066,4068,4070,4072,4074,4075,4077,4079,4081,4083,4085,4087,4089,4091,4093,4095
    }
};

static const ISP_CMOS_PREGAMMA_S g_stPreGamma =
{
    0,
    {
           3821,    7131,    9741,   11691,   13307,   14713,   15971,   17118,   18179,   20099,   21818,   23385,   24833,   26185,   27456,   28659,
          29804,   30897,   31945,   32952,   33923,   35770,   37506,   39150,   40713,   42207,   43638,   45014,   46340,   47622,   48863,   50066,
          51235,   52373,   53481,   54561,   55616,   57656,   59611,   61491,   63303,   65054,   66749,   68393,   69990,   71543,   73057,   74533,
          75974,   77383,   78761,   80110,   81432,   83999,   86475,   88866,   91182,   93428,   95609,   97731,   99799,  101815,  103784,  105708,
         107590,  109433,  111239,  113010,  114747,  118128,  121395,  124558,  127626,  130606,  133505,  136330,  139084,  141773,  144402,  146973,
         149491,  151957,  154376,  156749,  159079,  161368,  163618,  165831,  168008,  170152,  172263,  174342,  176392,  178413,  180407,  182374,
         184315,  186232,  188125,  189995,  191842,  193668,  197259,  200771,  204210,  207580,  210884,  214126,  217308,  220435,  223509,  226532,
         229506,  232434,  235318,  238159,  240959,  243720,  246443,  249130,  251782,  254400,  256986,  259540,  262064,  264559,  267025,  269464,
         271876,  274262,  276623,  278960,  281273,  283562,  288076,  292504,  296852,  301124,  305323,  309452,  313515,  317515,  321454,  325335,
         329160,  332931,  336651,  340322,  343945,  347521,  351054,  354543,  357991,  361399,  364767,  368099,  371394,  374653,  377878,  381070,
         384230,  387358,  390456,  393523,  396562,  399573,  405512,  411348,  417083,  422724,  428274,  433738,  439119,  444420,  449646,  454798,
         459880,  464894,  469842,  474728,  479554,  484320,  489030,  493685,  498287,  502838,  507339,  511791,  516197,  520557,  524874,  529147,
         533378,  537569,  541720,  545833,  549908,  553946,  557949,  561917,  565852,  569753,  577458,  585040,  592504,  599854,  607096,  614234,
         621272,  628214,  635064,  641824,  648498,  655090,  661601,  668035,  674394,  680681,  686897,  693045,  699128,  705146,  711103,  716999,
         722836,  728616,  734341,  740012,  745630,  751197,  756713,  762181,  767602,  778305,  788831,  799189,  809384,  819425,  829318,  839069,
         848683,  858166,  867523,  876757,  885875,  894879,  903774,  912563,  921249,  938329,  955037,  971395,  987423, 1003139, 1018560, 1033701,
        1048575
    }
};

static const ISP_CMOS_SHARPEN_S g_stIspYuvSharpen =
{
    /* u8SkinUmin */
    110,
    /* u8SkinVmin */
    128,
    /* u8SkinUmax */
    128,
    /* u8SkinVmax */
    149,

    /* Manual Para */
    {
        /*au8LumaWgt[ISP_SHARPEN_LUMA_NUM];*/
        {31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31},
        /*u16TextureStr[ISP_SHARPEN_GAIN_NUM];*/
        {250, 420, 390, 390, 390, 390, 390, 370, 350, 330, 310, 290, 270, 270, 270, 270, 270, 270, 266, 260, 244, 230, 230, 230, 230, 230, 230, 210, 190, 190, 170, 150},
        /*u16EdgeStr[ISP_SHARPEN_GAIN_NUM]; */
        {120, 123, 125, 128, 130, 135, 140, 148, 160, 168, 180, 190, 200, 210, 210, 210, 210, 210, 200, 190, 185, 175, 165, 160, 146, 136, 130, 128, 125, 123, 120, 120},
        /*u16TextureFreq;*/
        160,
        /*u16EdgeFreq;*/
        100,
        /*u8OverShoot;*/
        55,
        /*u8UnderShoot;*/
        70,
        /*u8shootSupStr;*/
        10,
        /*u8shootSupAdj;*/
        9,
        /*u8DetailCtrl; */
        128,
		/*u8DetailCtrlThr; */
        180,
        /*u8EdgeFiltStr; */
        60,
        /*u8RGain; */
        28,
        /*u8GGain; */
        32,
        /*u8BGain; */
        31,
        /*u8SkinGain; */
        23,
        /*u8MaxSharpGain; */
        67
    },
    /* Auto Para */
    {
        /*au16LumaWgt[ISP_SHARPEN_GAIN_NUM][ISP_AUTO_ISO_STRENGTH_NUM]; */
        /* ISO */
        /*     100,    200,    400,    800,   1600,   3200,   6400,  12800,  25600,  51200, 102400, 204800, 409600, 819200,1638400,3276800 */
        {   {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      1,      1,      1},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      2,      2,      2},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      4,      4,      4},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      5,      5,      5},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      7,      7,      7},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      8,      8,      8},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      9,      9,      9},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     10,     10,     10},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     12,     12,     12},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     13,     13,     13},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     14,     14,     14},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     15,     15,     15},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     17,     17,     17},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     18,     18,     18},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     19,     19,     19},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     20,     20,     20},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     22,     22,     22},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     23,     23,     23},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     24,     24,     24},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     26,     26,     26},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     26,     26,     26},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     26,     26,     26},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     26,     26,     26},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     27,     27,     27},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     27,     27,     27},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     27,     27,     27},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     27,     27,     27},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     28,     28,     28},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     28,     28,     28},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     28,     28,     28},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     28,     28,     28},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     28,     28,     28}
        },
        /*au16TextureStr[ISP_SHARPEN_GAIN_NUM][ISP_AUTO_ISO_STRENGTH_NUM];  */
        /* ISO */
        /*     100,    200,    400,    800,   1600,   3200,   6400,  12800,  25600,  51200, 102400, 204800, 409600, 819200,1638400,3276800*/
        {   {  269,    262,    190,    137,    146,    146,    131,    112,    114,    112,     87,     87,     76,     28,     28,     28},
            {  376,    312,    251,    161,    161,    161,    147,    130,    167,    130,    101,    101,    130,     43,     43,     43},
            {  463,    366,    309,    186,    176,    176,    163,    150,    221,    150,    116,    116,    185,     59,     59,     59},
            {  492,    414,    359,    210,    191,    191,    179,    168,    273,    168,    132,    132,    238,     75,     75,     75},
            {  495,    449,    402,    233,    205,    205,    195,    186,    322,    186,    147,    147,    288,     91,     91,     91},
            {  488,    463,    435,    253,    217,    217,    209,    201,    365,    201,    162,    162,    332,    106,    106,    106},
            {  476,    464,    459,    272,    229,    230,    222,    216,    406,    216,    176,    176,    372,    121,    121,    121},
            {  470,    459,    471,    289,    241,    241,    235,    230,    443,    230,    188,    188,    410,    136,    136,    136},
            {  465,    455,    476,    305,    252,    252,    247,    243,    478,    243,    199,    199,    444,    152,    152,    152},
            {  458,    452,    476,    318,    262,    261,    257,    253,    510,    253,    207,    207,    475,    167,    167,    167},
            {  451,    449,    474,    330,    271,    270,    266,    263,    541,    263,    214,    214,    503,    183,    183,    183},
            {  445,    444,    470,    340,    280,    279,    274,    271,    568,    271,    220,    220,    527,    199,    199,    199},
            {  440,    440,    466,    349,    288,    286,    281,    279,    588,    279,    225,    225,    546,    214,    214,    214},
            {  435,    435,    458,    354,    294,    291,    286,    284,    599,    284,    229,    229,    559,    228,    228,    228},
            {  429,    431,    449,    358,    299,    296,    289,    289,    605,    289,    232,    232,    568,    241,    241,    241},
            {  421,    427,    440,    361,    303,    299,    292,    292,    605,    292,    233,    233,    572,    254,    254,    254},
            {  410,    421,    429,    362,    307,    302,    294,    294,    603,    294,    235,    235,    573,    267,    267,    267},
            {  399,    411,    417,    361,    309,    302,    294,    294,    594,    294,    235,    235,    568,    283,    283,    283},
            {  386,    399,    405,    358,    309,    301,    294,    292,    579,    292,    234,    234,    556,    298,    298,    298},
            {  375,    385,    394,    353,    307,    298,    292,    288,    558,    288,    232,    232,    535,    313,    313,    313},
            {  363,    370,    382,    347,    303,    294,    289,    283,    538,    283,    228,    228,    511,    325,    325,    325},
            {  353,    352,    372,    339,    298,    289,    286,    276,    516,    276,    223,    223,    482,    338,    338,    338},
            {  336,    334,    361,    330,    292,    283,    282,    269,    489,    269,    217,    217,    450,    348,    348,    348},
            {  320,    320,    351,    320,    286,    277,    277,    262,    459,    262,    210,    210,    417,    353,    353,    353},
            {  309,    308,    339,    307,    280,    270,    271,    254,    422,    254,    201,    201,    383,    350,    350,    350},
            {  300,    299,    328,    292,    273,    263,    264,    246,    380,    246,    191,    191,    347,    343,    343,    343},
            {  290,    290,    317,    276,    266,    256,    256,    237,    335,    237,    180,    180,    309,    330,    330,    330},
            {  281,    283,    307,    260,    258,    247,    247,    228,    292,    228,    168,    168,    269,    313,    313,    313},
            {  270,    275,    296,    242,    246,    235,    235,    217,    249,    217,    155,    155,    224,    287,    287,    287},
            {  262,    269,    286,    223,    233,    223,    221,    205,    206,    205,    142,    142,    117,    254,    254,    254},
            {  256,    263,    275,    203,    220,    209,    207,    193,    163,    193,    129,    129,    128,    219,    219,    219},
            {  258,    258,    265,    184,    207,    197,    193,    182,    121,    182,    118,    118,     80,    186,    186,    186}
        },
        /*au16EdgeStr[ISP_SHARPEN_GAIN_NUM][ISP_AUTO_ISO_STRENGTH_NUM];     */
        /* ISO */
            /* 100,    200,    400,    800,   1600,   3200,   6400,  12800,  25600,  51200, 102400, 204800, 409600, 819200,1638400, 3276800 */
        {   {  250,    256,    262,    237,    243,    239,    239,    252,    432,    252,    214,    214,    224,    224,    224,    224},
            {  250,    260,    270,    254,    262,    246,    246,    262,    440,    262,    223,    223,    244,    244,    244,    244},
            {  250,    264,    279,    271,    282,    253,    253,    274,    451,    274,    233,    233,    265,    265,    265,    265},
            {  250,    268,    288,    288,    301,    261,    261,    284,    466,    284,    244,    244,    285,    285,    285,    285},
            {  250,    272,    296,    303,    319,    269,    269,    294,    485,    294,    254,    254,    303,    303,    303,    303},
            {  250,    276,    305,    315,    333,    277,    277,    301,    503,    301,    264,    264,    319,    319,    319,    319},
            {  250,    280,    313,    326,    346,    285,    285,    308,    523,    308,    273,    273,    333,    333,    333,    333},
            {  250,    286,    321,    335,    358,    294,    294,    314,    544,    314,    281,    281,    346,    346,    346,    346},
            {  250,    292,    328,    345,    368,    302,    302,    319,    565,    319,    288,    288,    357,    357,    357,    357},
            {  249,    299,    334,    353,    376,    308,    308,    322,    584,    322,    293,    293,    364,    364,    364,    364},
            {  249,    307,    339,    361,    382,    315,    315,    324,    603,    324,    297,    297,    370,    370,    370,    370},
            {  249,    316,    344,    368,    387,    321,    321,    326,    622,    326,    300,    300,    374,    374,    374,    374},
            {  248,    326,    349,    375,    391,    326,    326,    328,    641,    328,    302,    302,    379,    379,    379,    379},
            {  248,    335,    353,    380,    393,    330,    330,    329,    658,    329,    304,    304,    384,    384,    384,    384},
            {  248,    344,    357,    384,    394,    333,    333,    329,    671,    329,    305,    305,    390,    390,    390,    390},
            {  247,    351,    360,    388,    394,    336,    336,    329,    673,    329,    306,    306,    394,    394,    394,    394},
            {  247,    357,    364,    391,    394,    338,    338,    330,    674,    330,    307,    307,    398,    398,    398,    398},
            {  246,    361,    367,    392,    394,    338,    338,    330,    683,    330,    307,    307,    398,    398,    398,    398},
            {  245,    364,    369,    392,    394,    337,    337,    330,    690,    330,    307,    307,    398,    398,    398,    398},
            {  244,    366,    371,    391,    393,    336,    336,    330,    695,    330,    306,    306,    398,    398,    398,    398},
            {  243,    366,    373,    388,    389,    334,    334,    329,    696,    329,    305,    305,    398,    398,    398,    398},
            {  242,    366,    375,    384,    385,    331,    331,    329,    697,    329,    303,    303,    398,    398,    398,    398},
            {  241,    366,    376,    379,    380,    329,    329,    328,    696,    328,    300,    300,    399,    399,    399,    399},
            {  241,    366,    377,    374,    375,    326,    326,    328,    697,    328,    296,    296,    402,    402,    402,    402},
            {  240,    365,    377,    366,    368,    322,    322,    326,    697,    326,    291,    291,    405,    405,    405,    405},
            {  239,    363,    377,    358,    361,    318,    318,    325,    698,    325,    285,    285,    408,    408,    408,    408},
            {  238,    361,    377,    348,    353,    314,    314,    323,    699,    323,    279,    279,    411,    411,    411,    411},
            {  238,    359,    376,    338,    345,    309,    309,    320,    700,    320,    272,    272,    413,    413,    413,    413},
            {  237,    356,    376,    326,    335,    302,    302,    314,    700,    314,    264,    264,    411,    411,    411,    411},
            {  236,    353,    375,    313,    324,    295,    295,    307,    700,    307,    257,    257,    408,    408,    408,    408},
            {  235,    351,    375,    300,    313,    288,    288,    299,    700,    299,    249,    249,    405,    405,    405,    405},
            {  235,    349,    375,    288,    303,    281,    281,    292,    700,    292,    243,    243,    402,    402,    402,    402}
        },
        /*au16TextureFreq[ISP_AUTO_ISO_STRENGTH_NUM];*/
        /* ISO */
        /* 100,    200,    400,    800,    1600,    3200,    6400,   12800,   25600,   51200,  102400,  204800,  409600,  819200, 1638400, 3276800*/
        {  170,    200,    180,    180,     160,     160,     155,     170,     170,     170,     170,     170,     170,     170,     170,    170},

        /*au16EdgeFreq[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {  130,    115,    100,    100,     100,     100,     100,     100,     100,     100,      96,      96,      96,      96,      96,     96},

        /*au8OverShoot[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   58,     65,     75,     70,      65,      55,      40,      40,      30,      30,      40,      40,      10,      10,      10,     10},

        /*au8UnderShoot[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   70,     80,     90,     80,      80,      70,      60,      55,      45,      45,      50,      50,      15,      15,      15,     15},

        /*au16shootSupStr[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {    8,      12,      7,       7,      7,       6,       5,       5,       0,       0,       0,       0,       0,       0,       0,      0},

        /*au8ShootSupAdj[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {    8,      8,      8,       8,      7,       7,       6,       6,       0,       0,       0,       0,       0,       0,       0,      0},

        /*au8DetailCtrl[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {  135,    135,    128,     128,    128,     128,     128,     128,     128,     128,     120,     120,     120,     120,     120,    120},

        /*au8DetailCtrlThr[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {  160,    160,    160,     160,    160,     160,     160,     160,     160,     160,     160,     160,     160,     160,     160,    160},

        /*au8EdgeFiltStr[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   50,     50,     50,      55,     57,      60,      61,      62,      62,      62,      62,      62,      62,      62,      62,     62},

        /*au8RGain[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   28,     31,     31,      31,     31,      31,      31,      31,      31,      31,      31,      31,      31,      31,      31,     31},

        /*au8GGain[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   32,     32,     32,      32,     32,      32,      32,      32,      32,      32,      32,      32,      32,      32,      32,     32},

        /*au8BGain[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   31,     31,     31,      31,     31,      31,      31,      31,      31,      31,      31,      31,      31,      31,      31,     31},

        /*au8SkinGain[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   27,     27,     31,      31,     31,      31,      31,      31,      31,      31,      31,      31,      31,      31,      31,     31},

        /*u8MaxSharpGain[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   67,     70,     72,      74,     80,      80,      80,      80,      80,      80,      80,      80,      80,      80,      80,     80}
    },
};

static const ISP_CMOS_SHARPEN_S g_stIspYuvSharpenWdr =
{
    /* u8SkinUmin */
    110,
    /* u8SkinVmin */
    128,
    /* u8SkinUmax */
    128,
    /* u8SkinVmax */
    149,

    /* Manual Para */
    {
        /*au8LumaWgt[ISP_SHARPEN_LUMA_NUM];*/
        {31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31},
        /*u16TextureStr[ISP_SHARPEN_GAIN_NUM];*/
        {250, 420, 390, 390, 390, 390, 390, 370, 350, 330, 310, 290, 270, 270, 270, 270, 270, 270, 266, 260, 244, 230, 230, 230, 230, 230, 230, 210, 190, 190, 170, 150},
        /*u16EdgeStr[ISP_SHARPEN_GAIN_NUM]; */
        {120, 123, 125, 128, 130, 135, 140, 148, 160, 168, 180, 190, 200, 210, 210, 210, 210, 210, 200, 190, 185, 175, 165, 160, 146, 136, 130, 128, 125, 123, 120, 120},
        /*u16TextureFreq;*/
        160,
        /*u16EdgeFreq;*/
        100,
        /*u8OverShoot;*/
        55,
        /*u8UnderShoot;*/
        70,
        /*u8shootSupStr;*/
        10,
        /*u8shootSupAdj;*/
        9,
        /*u8DetailCtrl; */
        128,
		/*u8DetailCtrlThr; */
        180,
        /*u8EdgeFiltStr; */
        60,
        /*u8RGain; */
        28,
        /*u8GGain; */
        32,
        /*u8BGain; */
        31,
        /*u8SkinGain; */
        23,
        /*u8MaxSharpGain; */
        67
    },
    /* Auto Para */
    {
        /*au16LumaWgt[ISP_SHARPEN_GAIN_NUM][ISP_AUTO_ISO_STRENGTH_NUM]; */
        /* ISO */
        /*     100,    200,    400,    800,   1600,   3200,   6400,  12800,  25600,  51200, 102400, 204800, 409600, 819200,1638400,3276800 */
        {   {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      1,      1,      1},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      2,      2,      2},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      4,      4,      4},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      5,      5,      5},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      7,      7,      7},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      8,      8,      8},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,      9,      9,      9},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     10,     10,     10},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     12,     12,     12},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     13,     13,     13},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     14,     14,     14},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     15,     15,     15},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     17,     17,     17},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     18,     18,     18},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     19,     19,     19},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     20,     20,     20},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     22,     22,     22},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     23,     23,     23},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     24,     24,     24},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     26,     26,     26},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     26,     26,     26},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     26,     26,     26},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     26,     26,     26},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     27,     27,     27},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     27,     27,     27},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     27,     27,     27},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     27,     27,     27},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     28,     28,     28},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     28,     28,     28},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     28,     28,     28},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     28,     28,     28},
            {   31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     31,     28,     28,     28}
        },
        /*au16TextureStr[ISP_SHARPEN_GAIN_NUM][ISP_AUTO_ISO_STRENGTH_NUM];  */
        /* ISO */
        /*     100,    200,    400,    800,   1600,   3200,   6400,  12800,  25600,  51200, 102400, 204800, 409600, 819200,1638400,3276800*/
        {   {  265,    235,    201,    190,    182,    135,    135,    101,     93,     70,     70,     70,     76,     28,     28,     28},
            {  285,    261,    223,    210,    201,    153,    153,    112,    104,     77,     77,     77,    130,     43,     43,     43},
            {  307,    289,    247,    232,    221,    172,    172,    123,    115,     85,     85,     85,    185,     59,     59,     59},
            {  327,    315,    269,    252,    240,    190,    190,    134,    126,     93,     93,     93,    238,     75,     75,     75},
            {  347,    338,    290,    271,    258,    207,    207,    146,    137,    101,    101,    101,    288,     91,     91,     91},
            {  365,    356,    308,    286,    273,    221,    221,    158,    146,    107,    107,    107,    332,    106,    106,    106},
            {  382,    371,    325,    300,    288,    233,    233,    171,    156,    114,    114,    114,    372,    121,    121,    121},
            {  398,    384,    340,    312,    301,    245,    245,    184,    165,    120,    120,    120,    410,    136,    136,    136},
            {  411,    396,    353,    324,    313,    256,    256,    197,    174,    127,    127,    127,    444,    152,    152,    152},
            {  420,    405,    363,    334,    321,    265,    265,    208,    183,    134,    134,    134,    475,    167,    167,    167},
            {  428,    412,    371,    343,    328,    274,    274,    220,    192,    141,    141,    141,    503,    183,    183,    183},
            {  433,    417,    377,    350,    334,    282,    282,    231,    200,    148,    148,    148,    527,    199,    199,    199},
            {  438,    421,    383,    357,    339,    290,    290,    241,    207,    154,    154,    154,    546,    214,    214,    214},
            {  440,    423,    386,    361,    343,    296,    296,    249,    211,    157,    157,    157,    559,    228,    228,    228},
            {  441,    423,    389,    364,    347,    301,    301,    256,    213,    160,    160,    160,    568,    241,    241,    241},
            {  441,    422,    390,    366,    349,    306,    306,    262,    215,    161,    161,    161,    572,    254,    254,    254},
            {  440,    421,    391,    368,    351,    309,    309,    265,    216,    163,    163,    163,    573,    267,    267,    267},
            {  438,    418,    391,    367,    350,    310,    310,    263,    215,    163,    163,    163,    568,    283,    283,    283},
            {  434,    413,    390,    365,    348,    310,    310,    257,    214,    163,    163,    163,    556,    298,    298,    298},
            {  427,    406,    385,    362,    345,    307,    307,    250,    210,    161,    161,    161,    535,    313,    313,    313},
            {  417,    397,    377,    357,    340,    302,    302,    243,    205,    157,    157,    157,    511,    325,    325,    325},
            {  406,    386,    367,    352,    335,    296,    296,    235,    198,    152,    152,    152,    482,    338,    338,    338},
            {  393,    374,    356,    345,    329,    289,    289,    226,    191,    146,    146,    146,    450,    348,    348,    348},
            {  381,    362,    345,    338,    322,    281,    281,    218,    184,    140,    140,    140,    417,    353,    353,    353},
            {  368,    349,    334,    328,    313,    271,    271,    208,    176,    132,    132,    132,    383,    350,    350,    350},
            {  356,    335,    323,    317,    303,    260,    260,    198,    167,    124,    124,    124,    347,    343,    343,    343},
            {  343,    322,    312,    305,    291,    247,    247,    188,    159,    115,    115,    115,    309,    330,    330,    330},
            {  330,    309,    300,    292,    279,    235,    235,    178,    150,    108,    108,    108,    269,    313,    313,    313},
            {  316,    296,    285,    277,    264,    221,    221,    167,    140,    100,    100,    100,    224,    287,    287,    287},
            {  301,    283,    270,    261,    247,    206,    206,    157,    130,     93,     93,     93,    117,    254,    254,    254},
            {  287,    270,    254,    245,    230,    191,    191,    147,    120,     86,     86,     86,    128,    219,    219,    219},
            {  273,    258,    239,    229,    214,    176,    176,    137,    110,     80,     80,     80,     80,    186,    186,    186}
        },
        /*au16EdgeStr[ISP_SHARPEN_GAIN_NUM][ISP_AUTO_ISO_STRENGTH_NUM];     */
        /* ISO */
            /* 100,    200,    400,    800,   1600,   3200,   6400,  12800,  25600,  51200, 102400, 204800, 409600, 819200,1638400, 3276800 */
        {   {  313,    313,    281,    311,    317,    317,    393,    393,    393,    338,    338,    338,    224,    224,    224,    224},
            {  317,    317,    282,    315,    317,    317,    393,    393,    393,    338,    338,    338,    244,    244,    244,    244},
            {  322,    322,    283,    320,    318,    317,    393,    393,    393,    338,    338,    338,    265,    265,    265,    265},
            {  327,    327,    285,    325,    319,    318,    393,    393,    393,    338,    338,    338,    285,    285,    285,    285},
            {  332,    332,    287,    331,    320,    318,    393,    393,    393,    338,    338,    338,    303,    303,    303,    303},
            {  336,    336,    288,    336,    321,    318,    393,    393,    393,    338,    338,    338,    319,    319,    319,    319},
            {  341,    341,    290,    341,    322,    319,    393,    393,    393,    338,    338,    338,    333,    333,    333,    333},
            {  345,    345,    291,    347,    322,    319,    393,    393,    393,    338,    338,    338,    346,    346,    346,    346},
            {  349,    349,    293,    352,    323,    320,    393,    393,    393,    338,    338,    338,    357,    357,    357,    357},
            {  352,    352,    294,    357,    324,    320,    393,    393,    393,    338,    338,    338,    364,    364,    364,    364},
            {  355,    355,    296,    362,    325,    320,    393,    393,    393,    338,    338,    338,    370,    370,    370,    370},
            {  358,    358,    297,    367,    326,    321,    393,    393,    393,    338,    338,    338,    374,    374,    374,    374},
            {  360,    360,    299,    371,    327,    321,    393,    393,    393,    338,    338,    338,    379,    379,    379,    379},
            {  363,    363,    300,    375,    327,    321,    393,    393,    393,    338,    338,    338,    384,    384,    384,    384},
            {  365,    365,    301,    378,    328,    321,    393,    393,    393,    338,    338,    338,    390,    390,    390,    390},
            {  366,    366,    302,    380,    329,    321,    393,    393,    393,    338,    338,    338,    394,    394,    394,    394},
            {  368,    368,    303,    383,    330,    322,    393,    393,    393,    338,    338,    338,    398,    398,    398,    398},
            {  368,    368,    303,    384,    330,    322,    393,    393,    393,    338,    338,    338,    398,    398,    398,    398},
            {  369,    369,    304,    385,    331,    322,    393,    393,    393,    338,    338,    338,    398,    398,    398,    398},
            {  369,    369,    304,    385,    332,    321,    393,    393,    393,    338,    338,    338,    398,    398,    398,    398},
            {  369,    369,    304,    384,    332,    321,    393,    393,    393,    338,    338,    338,    398,    398,    398,    398},
            {  368,    368,    304,    383,    333,    321,    393,    393,    393,    338,    338,    338,    398,    398,    398,    398},
            {  367,    367,    304,    381,    333,    321,    393,    393,    393,    338,    338,    338,    399,    399,    399,    399},
            {  366,    366,    304,    380,    334,    321,    393,    393,    393,    338,    338,    338,    402,    402,    402,    402},
            {  364,    364,    304,    378,    335,    320,    393,    393,    393,    338,    338,    338,    405,    405,    405,    405},
            {  362,    362,    304,    375,    335,    320,    393,    393,    393,    338,    338,    338,    408,    408,    408,    408},
            {  360,    360,    303,    373,    336,    320,    393,    393,    393,    338,    338,    338,    411,    411,    411,    411},
            {  358,    358,    303,    371,    336,    320,    393,    393,    393,    338,    338,    338,    413,    413,    413,    413},
            {  356,    356,    303,    369,    337,    319,    393,    393,    393,    338,    338,    338,    411,    411,    411,    411},
            {  353,    353,    303,    367,    337,    319,    393,    393,    393,    338,    338,    338,    408,    408,    408,    408},
            {  351,    351,    303,    365,    338,    319,    393,    393,    393,    338,    338,    338,    405,    405,    405,    405},
            {  349,    349,    303,    364,    339,    319,    393,    393,    393,    338,    338,    338,    402,    402,    402,    402}
        },
        /*au16TextureFreq[ISP_AUTO_ISO_STRENGTH_NUM];*/
        /* ISO */
        /* 100,    200,    400,    800,    1600,    3200,    6400,   12800,   25600,   51200,  102400,  204800,  409600,  819200, 1638400, 3276800*/
        {  160,    170,    180,    180,     160,     160,     155,     170,     170,     170,     170,     170,     170,     170,     170,    170},

        /*au16EdgeFreq[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {  130,    115,    100,    100,     100,     100,     100,     100,     100,     100,      96,      96,      96,      96,      96,     96},

        /*au8OverShoot[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   58,     70,     75,     70,      65,      55,      40,      40,      30,      30,      40,      40,      10,      10,      10,     10},

        /*au8UnderShoot[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   70,     87,     90,     80,      80,      70,      60,      55,      45,      45,      50,      50,      15,      15,      15,     15},

        /*au16shootSupStr[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {    8,      8,      7,       7,      7,       6,       5,       5,       0,       0,       0,       0,       0,       0,       0,      0},

        /*au8ShootSupAdj[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {    9,      9,      8,       8,      7,       7,       6,       6,       0,       0,       0,       0,       0,       0,       0,      0},

        /*au8DetailCtrl[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {  128,    128,    128,     128,    128,     128,     128,     128,     128,     128,     120,     120,     120,     120,     120,    120},

        /*au8DetailCtrlThr[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {  160,    160,    160,     160,    160,     160,     160,     160,     160,     160,     160,     160,     160,     160,     160,    160},

        /*au8EdgeFiltStr[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   50,     50,     50,      55,     57,      60,      61,      62,      62,      62,      62,      62,      62,      62,      62,     62},

        /*au8RGain[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   28,     31,     31,      31,     31,      31,      31,      31,      31,      31,      31,      31,      31,      31,      31,     31},

        /*au8GGain[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   32,     32,     32,      32,     32,      32,      32,      32,      32,      32,      32,      32,      32,      32,      32,     32},

        /*au8BGain[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   31,     31,     31,      31,     31,      31,      31,      31,      31,      31,      31,      31,      31,      31,      31,     31},

        /*au8SkinGain[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   25,     27,     31,      31,     31,      31,      31,      31,      31,      31,      31,      31,      31,      31,      31,     31},

        /*u8MaxSharpGain[ISP_AUTO_ISO_STRENGTH_NUM];*/
        {   67,     70,     72,      74,     80,      80,      80,      80,      80,      80,      80,      80,      80,      80,      80,     80}
    },
};

static AWB_CCM_S g_stAwbCcm =
{
    3,
    {
        {
            4900,
            {
                0x01C4,  0x80B8,  0x800C,
                0x804D,  0x0164,  0x8017,
                0x8001,  0x80C5,  0x01C6
            },
        },

        {
            3850,
            {
                0x01C0,  0x80AB,  0x8015,
                0x8041,  0x0164,  0x8023,
                0x8001,  0x80DA,  0x01DB
            },
        },

        {
            2650,
            {
                /*
                0x0198,  0x807A,  0x801E,
                0x8056,  0x017D,  0x8027,
                0x8001,  0x8158,  0x0258
                */
                0x01EB, 0x8103, 0x0018,
                0x8055, 0x0161, 0x800C,
                0x0020, 0x8157, 0x0237
            },
        },
        {
            2100,
            {
                0x0100,  0x0000,  0x0000,
                0x0000,  0x0100,  0x0000,
                0x0000,  0x0000,  0x0100
            },
        },
        {
            1600,
            {
                0x0100,  0x0000,  0x0000,
                0x0000,  0x0100,  0x0000,
                0x0000,  0x0000,  0x0100
            },
        },
        {
            1400,
            {
                0x0100,  0x0000,  0x0000,
                0x0000,  0x0100,  0x0000,
                0x0000,  0x0000,  0x0100
            },
        },
        {
            1000,
            {
                0x0100,  0x0000,  0x0000,
                0x0000,  0x0100,  0x0000,
                0x0000,  0x0000,  0x0100
            },
        },
    },
};

static AWB_CCM_S g_stAwbCcmFsWdr =
{
    3,
    {
        {
            4900,
            {
                0x0188,  0x8081,  0x8007,
                0x803C,  0x014C,  0x8010,
                0x0005,  0x808C,  0x0187
            },
        },

        {
            3850,
            {
                0x0188,  0x8077,  0x8011,
                0x8030,  0x014C,  0x801C,
                0x0007,  0x809D,  0x0196
            },
        },

        {
            2650,
            {
                0x0160,  0x8049,  0x8017,
                0x8046,  0x0164,  0x801E,
                0x0003,  0x8109,  0x0206
            },
        },
        {
            2100,
            {
                0x0100,  0x0000,  0x0000,
                0x0000,  0x0100,  0x0000,
                0x0000,  0x0000,  0x0100
            },
        },
        {
            1600,
            {
                0x0100,  0x0000,  0x0000,
                0x0000,  0x0100,  0x0000,
                0x0000,  0x0000,  0x0100
            },
        },
        {
            1400,
            {
                0x0100,  0x0000,  0x0000,
                0x0000,  0x0100,  0x0000,
                0x0000,  0x0000,  0x0100
            },
        },
        {
            1000,
            {
                0x0100,  0x0000,  0x0000,
                0x0000,  0x0100,  0x0000,
                0x0000,  0x0000,  0x0100
            },
        },
    },
};


static AWB_AGC_TABLE_S g_stAwbAgcTable =
{
    /* bvalid */
    1,

    /* saturation */
    /*  1,    2,    4,    8,   16,   32,   64,  128,  256,  512, 1024, 2048, 4096, 8192, 16384, 32768*/
    {0x80, 0x78, 0x73, 0x6E, 0x69, 0x5F, 0x58, 0x50, 0x48, 0x40, 0x38, 0x38, 0x38, 0x38,  0x38,  0x38}
};

static AWB_AGC_TABLE_S g_stAwbAgcTableFSWDR =
{
    /* bvalid */
    1,

    /* saturation */
    /*  1,    2,    4,    8,   16,   32,   64,  128,  256,  512, 1024, 2048, 4096, 8192, 16384, 32768*/
    { 128,  120,  115,  110,  105,  100,   95,   90,   85,   80,   75,   70,   56,   56,    56,    56}
};

static const ISP_CMOS_WDR_S g_stIspWDR =
{
    /*bFusionMode*/
    1,

    /*bMotionComp*/
    1,

    /*u16ShortThr*/
    4032,

    /*u16LongThr*/
    3008,

    /*bForceLong*/
    1,

    /*u16ForceLongLowThr*/

    500,

    /*u16ForceLongHigThr*/
    700,

    /*bShortExpoChk*/
    0,

    /*u16ShortCheckThd*/
    0x8,

    /*au8MdThrLowGain[16]*/
    /* 1,    2,    4,    8,   16,   32,   64,  128,  256,  512, 1024, 2048, 4096, 8192, 16384, 32768*/
    { 64,   64,   64,   64,  128,  255,  255,  255,  255,  255,  255,  255,  255,  255,   255,   255},

    /*au8MdThrHigGain[16]*/
    {128,  128,  128,  128,  128,  255,  255,  255,  255,  255,  255,  255,  255,  255,   255,   255},

    /*au16FusionThr[2]*/
    {3855, 3000},

    /*u8MdtStillThd*/
    0x14,

    /*u8MdtLongBlend*/
    0x0
};

static const ISP_CMOS_DEHAZE_S g_stIspDehaze =
{
    /*bEnable*/
    0,
    /*bUserLutEnable*/
    0,
    /*enOpType*/
    0,
    /*u8AutoStrength*/
    128,
    /*u8ManualStrength*/
    128
};

static const ISP_CMOS_DEHAZE_S g_stIspDehazeWDR =
{
    /*bEnable*/
    1,
    /*bUserLutEnable*/
    1,
    /*enOpType*/
    1,
    /*u8AutoStrength*/
    100,
    /*u8ManualStrength*/
    128
};


static const ISP_CMOS_DRC_S g_stIspDRC =
{
    /*bEnable;*/
    0,
    /*u16ManualStrength;*/
    512,
    /*u16AutoStrength;*/
    512,
    /*u8SpatialFltCoef;*/
    1,
    /*u8RangeFltCoef;*/
    2,
    /*u8ContrastControl*/
    8,
    /*s8DetailAdjustFactor*/
    0,
    /*u8RangeAdaMax*/
    8,
    /*u8FltScaleFine*/
    6,
    /*u8FltScaleCoarse*/
    6,
    /*u8GradRevMax*/
    64,
    /*u8GradRevThr*/
    50,
    /*u8BrightGainLmt*/
    12,
    /*u8BrightGainLmtStep*/
    8,
    /*u8DarkGainLmtY*/
    0,
    /*u8DarkGainLmtC*/
    0,
    /*u8PDStrength*/
    35,
    /*u8LocalMixingBrightMax*/
    64,
    /*u8LocalMixingBrightMin*/
    32,
    /*u8LocalMixingBrightThr*/
    96,
    /*s8LocalMixingBrightSlo*/
    -3,
    /*u8LocalMixingDarkMax*/
    64,
    /*u8LocalMixingDarkMin*/
    32,
    /*u8LocalMixingDarkThr*/
    200,
    /*s8LocalMixingDarkSlo*/
    5,
    /*ColorCorrectionLut[33]*/
    {1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024},
    /*u8Asymmetry*/
    2,
    /*u8SecondPole*/
    180,
    /*u8Stretch*/
    54,
    /*u8Compress*/
    180,
    /*u8CurveSel*/
    0,
    /*au16Xpoint*/
    {0, 200, 400, 600, 1000},
    /*au16Ypoint*/
    {0, 200, 400, 600, 1000},
    /*au16Slope*/
    {1000, 1000, 1000, 1000, 1000}
};

static const ISP_CMOS_DRC_S g_stIspDRCWDR =
{
    /*bEnable;*/
    1,
    /*u16ManualStrength;*/
    1023,
    /*u16AutoStrength*/
    512,
    /*u8SpatialFltCoef*/
    0,
    /*u8RangeFltCoef*/
    1,
    /*u8ContrastControl*/
    8,
    /*s8DetailAdjustFactor*/
    10,
    /*u8RangeAdaMax*/
    4,
    /*u8FltScaleFine*/
    3,
    /*u8FltScaleCoarse*/
    3,
    /*u8GradRevMax*/
    30,
    /*u8GradRevThr*/
    50,
    /*u8BrightGainLmt*/
    15,
    /*u8BrightGainLmtStep*/
    10,
    /*u8DarkGainLmtY*/
    0,
    /*u8DarkGainLmtC*/
    12,
    /*u8PDStrength*/
    35,
    /*u8LocalMixingBrightMax*/
    32,
    /*u8LocalMixingBrightMin*/
    20,
    /*u8LocalMixingBrightThr*/
    96,
    /*s8LocalMixingBrightSlo*/
    -3,
    /*u8LocalMixingDarkMax*/
    30,
    /*u8LocalMixingDarkMin*/
    20,
    /*u8LocalMixingDarkThr*/
    200,
    /*s8LocalMixingDarkSlo*/
    5,
    /*ColorCorrectionLut[33]*/
    {1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 772, 768, 764, 760, 756, 752, 748, 744, 740, 736, 732, 728, 724, 720, 716, 712, 708, 704, 700},
    /*u8Asymmetry;*/
    6,
    /*u8SecondPole;*/
    180,
    /*u8Stretch;*/
    50,
    /*u8Compress;*/
    150,
    /*u8CurveSel; */
    0,
    /*au16Xpoint*/
    {0, 200, 400, 600, 1000},
    /*au16Ypoint*/
    {0, 200, 400, 600, 1000},
    /*au16Slope*/
    {1000, 1000, 1000, 1000, 1000}
};

static const ISP_CMOS_CA_S g_stIspCA =
{
    /*CA*/
    1,
    /*Y*/
    {
        516,525,534,544,554,563,573,583,594,604,614,624,634,644,654,664,
        674,684,694,704,713,723,732,741,750,758,766,775,782,790,797,804,
        811,817,823,828,834,839,844,848,853,857,861,865,868,872,875,878,
        881,884,887,890,892,895,898,900,903,905,908,910,913,915,918,921,
        924,926,929,932,935,937,940,943,945,948,950,952,955,957,959,961,
        964,966,968,970,972,974,976,978,979,981,983,985,987,988,990,992,
        993,994,995,996,997,998,998,999,1000,1001,1002,1002,1003,1004,1005,1006,
        1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1018,1019,1020,1022,1024
    },
    /*ISO*/
    /*  1,    2,    4,    8,   16,   32,   64,  128,  256,  512, 1024, 2048, 4096, 8192, 16384, 32768*/
    {1300, 1300, 1250, 1200, 1150, 1100, 1050, 1000,  950,  900,  900,  800,  800,  800,   800,   800}
};


static const ISP_CMOS_LSC_S g_stCmosLsc =
{
    /*MeshStrength*/
    256,
    /*MeshScale*/
    4,
    /*ISP_LSC_CABLI_TABLE_S*/
    {
        {
            //Rgain:
            {
                0x26b,  0x1de,  0x179,  0x12a,  0xee,   0xc4,   0xa2,   0x94,   0x94,   0x97,   0xad,   0xc8,   0x10d,  0x133,  0x184,  0x1fd,  0x284,
                0x235,  0x1ba,  0x158,  0x10d,  0xd3,   0xad,   0x8c,   0x7b,   0x74,   0x7b,   0x90,   0xaf,   0xd8,   0x114,  0x164,  0x1d1,  0x253,
                0x210,  0x194,  0x136,  0xec,   0xbc,   0x91,   0x6f,   0x5d,   0x59,   0x5f,   0x75,   0x94,   0xbf,   0xf7,   0x149,  0x1ac,  0x229,
                0x1e1,  0x177,  0x11a,  0xd7,   0xa6,   0x7c,   0x5b,   0x44,   0x3e,   0x4a,   0x5c,   0x7d,   0xab,   0xe2,   0x127,  0x18f,  0x200,
                0x1c8,  0x15f,  0x10d,  0xc9,   0x98,   0x69,   0x4a,   0x32,   0x2a,   0x33,   0x4a,   0x6b,   0x9e,   0xd0,   0x113,  0x175,  0x1e5,
                0x1b6,  0x14f,  0xf9,   0xbf,   0x84,   0x57,   0x34,   0x21,   0x18,   0x21,   0x3a,   0x5e,   0x8e,   0xc2,   0x105,  0x162,  0x1d8,
                0x1a9,  0x140,  0xef,   0xb4,   0x7d,   0x50,   0x2d,   0x11,   0xa,    0x15,   0x2f,   0x57,   0x83,   0xb9,   0xfb,   0x156,  0x1c3,
                0x1a5,  0x134,  0xe9,   0xae,   0x7a,   0x4b,   0x26,   0x8,    0x4,    0xc,    0x28,   0x4f,   0x7f,   0xb8,   0xf7,   0x151,  0x1bf,
                0x19d,  0x134,  0xe8,   0xac,   0x75,   0x48,   0x34,   0x4,    0x0,    0xa,    0x25,   0x50,   0x7e,   0xb5,   0xf8,   0x150,  0x1bd,
                0x199,  0x134,  0xea,   0xae,   0x73,   0x4b,   0x32,   0x5,    0x2,    0xd,    0x2a,   0x4e,   0x83,   0xbc,   0xf9,   0x151,  0x1c0,
                0x1a5,  0x139,  0xee,   0xb1,   0x7e,   0x51,   0x2f,   0x14,   0xd,    0x16,   0x31,   0x56,   0x86,   0xbb,   0x100,  0x158,  0x1c3,
                0x1b2,  0x147,  0xfe,   0xbd,   0x87,   0x5f,   0x3b,   0x24,   0x1b,   0x24,   0x43,   0x64,   0x90,   0xc8,   0x107,  0x164,  0x1d2,
                0x1c1,  0x159,  0x107,  0xca,   0x94,   0x6e,   0x4d,   0x36,   0x30,   0x36,   0x4e,   0x74,   0x9b,   0xd1,   0x11a,  0x173,  0x1e2,
                0x1de,  0x16f,  0x119,  0xda,   0xa7,   0x7f,   0x64,   0x4e,   0x45,   0x4f,   0x62,   0x86,   0xb1,   0xe6,   0x128,  0x188,  0x1fd,
                0x1f9,  0x18a,  0x131,  0xf2,   0xbf,   0x99,   0x79,   0x65,   0x60,   0x6a,   0x7b,   0x9e,   0xc9,   0xfb,   0x13d,  0x19f,  0x21e,
                0x21c,  0x1a9,  0x14b,  0x109,  0xd6,   0xb4,   0x96,   0x83,   0x7f,   0x83,   0x94,   0xb7,   0xe0,   0x115,  0x15d,  0x1c1,  0x23f,
                0x244,  0x1c8,  0x167,  0x127,  0xf5,   0xcc,   0xb1,   0x9f,   0x99,   0x98,   0xb3,   0xce,   0xf7,   0x12e,  0x17a,  0x1e9,  0x262,
            },

            //Grgain:
            {
                0x27c,  0x1fd,  0x18b,  0x138,  0xfb,   0xd2,   0xb1,   0xa3,   0x9d,   0xa0,   0xb7,   0xd8,   0x11d,  0x141,  0x1a4,  0x21c,  0x2ab,
                0x24a,  0x1d0,  0x164,  0x113,  0xde,   0xb4,   0x96,   0x83,   0x7e,   0x84,   0x9a,   0xbb,   0xe8,   0x128,  0x17a,  0x1ec,  0x274,
                0x21c,  0x1a8,  0x140,  0xf8,   0xc5,   0x9b,   0x77,   0x64,   0x5d,   0x67,   0x80,   0x9f,   0xca,   0x105,  0x15a,  0x1c1,  0x24e,
                0x1f6,  0x18b,  0x127,  0xe6,   0xaf,   0x82,   0x62,   0x4b,   0x46,   0x4e,   0x64,   0x85,   0xb6,   0xee,   0x13c,  0x1a6,  0x22d,
                0x1de,  0x170,  0x118,  0xd3,   0x9d,   0x6f,   0x4c,   0x35,   0x2a,   0x37,   0x4f,   0x76,   0xa3,   0xdb,   0x123,  0x187,  0x20b,
                0x1ca,  0x15c,  0x107,  0xc6,   0x8e,   0x5d,   0x3c,   0x21,   0x19,   0x27,   0x41,   0x68,   0x94,   0xce,   0x116,  0x17a,  0x1fa,
                0x1b4,  0x151,  0xfc,   0xbd,   0x85,   0x54,   0x31,   0x12,   0x9,    0x16,   0x34,   0x5c,   0x89,   0xc6,   0x10a,  0x16b,  0x1e5,
                0x1ae,  0x147,  0xf7,   0xb7,   0x80,   0x53,   0x29,   0xa,    0x4,    0x12,   0x2c,   0x56,   0x86,   0xc1,   0x103,  0x166,  0x1dc,
                0x1ac,  0x144,  0xf5,   0xb5,   0x7d,   0x4c,   0x37,   0x7,    0x1,    0xc,    0x2a,   0x55,   0x83,   0xbe,   0x101,  0x166,  0x1d7,
                0x1aa,  0x145,  0xf9,   0xb6,   0x82,   0x52,   0x3a,   0xb,    0x5,    0xd,    0x2d,   0x57,   0x88,   0xc0,   0x102,  0x162,  0x1dc,
                0x1b4,  0x14d,  0xfe,   0xbc,   0x87,   0x5c,   0x36,   0x16,   0xf,    0x19,   0x36,   0x5f,   0x8f,   0xca,   0x10d,  0x16b,  0x1e2,
                0x1be,  0x15a,  0x10b,  0xca,   0x90,   0x63,   0x3e,   0x26,   0x1f,   0x2b,   0x44,   0x69,   0x9c,   0xd2,   0x119,  0x175,  0x1f3,
                0x1c9,  0x16a,  0x114,  0xd5,   0x9e,   0x77,   0x54,   0x3a,   0x33,   0x3a,   0x54,   0x79,   0xa8,   0xe1,   0x127,  0x184,  0x203,
                0x1ed,  0x186,  0x12a,  0xe7,   0xb1,   0x87,   0x6a,   0x55,   0x4c,   0x54,   0x6d,   0x8f,   0xbb,   0xf4,   0x137,  0x1a0,  0x21a,
                0x20d,  0x1a0,  0x140,  0xfc,   0xc7,   0xa3,   0x81,   0x6d,   0x66,   0x71,   0x85,   0xa5,   0xd3,   0x108,  0x152,  0x1b9,  0x23c,
                0x231,  0x1bf,  0x160,  0x119,  0xe6,   0xbd,   0x9e,   0x8a,   0x84,   0x8c,   0xa2,   0xc5,   0xf0,   0x123,  0x16d,  0x1da,  0x260,
                0x25c,  0x1e1,  0x17f,  0x136,  0xfd,   0xda,   0xbe,   0xaa,   0x9f,   0xa9,   0xbb,   0xda,   0x104,  0x13e,  0x18e,  0x1ff,  0x285,
            },

            //Gbgain:
            {
                0x28b,  0x1fd,  0x18e,  0x139,  0xfd,   0xd7,   0xb6,   0xa3,   0xa4,   0xa9,   0xbc,   0xde,   0x126,  0x14d,  0x1a5,  0x21f,  0x2b1,
                0x256,  0x1d6,  0x16a,  0x11d,  0xe4,   0xb9,   0x9b,   0x87,   0x83,   0x8b,   0xa0,   0xc1,   0xec,   0x12e,  0x183,  0x1f5,  0x284,
                0x229,  0x1ad,  0x142,  0xfb,   0xc9,   0x9f,   0x7c,   0x6a,   0x62,   0x6c,   0x84,   0xa4,   0xd2,   0x10f,  0x15f,  0x1ce,  0x252,
                0x201,  0x18a,  0x129,  0xe8,   0xb1,   0x86,   0x67,   0x4d,   0x4b,   0x51,   0x6a,   0x8b,   0xbc,   0xf9,   0x140,  0x1ac,  0x229,
                0x1ea,  0x176,  0x116,  0xd2,   0x9e,   0x73,   0x4e,   0x38,   0x2f,   0x3c,   0x54,   0x7a,   0xaa,   0xe0,   0x127,  0x18f,  0x211,
                0x1ce,  0x160,  0x107,  0xc8,   0x94,   0x5f,   0x3d,   0x22,   0x1e,   0x28,   0x43,   0x6b,   0x9a,   0xd1,   0x11c,  0x17d,  0x1fa,
                0x1bf,  0x153,  0x101,  0xbe,   0x86,   0x54,   0x2f,   0x14,   0xc,    0x1b,   0x36,   0x60,   0x91,   0xc9,   0x110,  0x16f,  0x1eb,
                0x1bf,  0x14a,  0xfa,   0xb8,   0x81,   0x4f,   0x28,   0xb,    0x3,    0x11,   0x2e,   0x56,   0x8a,   0xc6,   0x10a,  0x16a,  0x1e2,
                0x1b1,  0x149,  0xfa,   0xb8,   0x7f,   0x50,   0x37,   0x8,    0x0,    0xf,    0x2e,   0x57,   0x89,   0xc2,   0x107,  0x16a,  0x1df,
                0x1b9,  0x148,  0xf9,   0xba,   0x82,   0x54,   0x36,   0xd,    0x5,    0x10,   0x2f,   0x5a,   0x8b,   0xc5,   0x10a,  0x167,  0x1dd,
                0x1c0,  0x150,  0x100,  0xbf,   0x86,   0x5a,   0x34,   0x16,   0x10,   0x18,   0x39,   0x61,   0x91,   0xcb,   0x115,  0x171,  0x1e9,
                0x1d0,  0x15d,  0x10b,  0xc9,   0x93,   0x66,   0x43,   0x26,   0x1f,   0x29,   0x46,   0x6d,   0x9f,   0xd4,   0x11a,  0x17d,  0x1f3,
                0x1e1,  0x16e,  0x11a,  0xd6,   0x9d,   0x76,   0x54,   0x3c,   0x35,   0x40,   0x59,   0x7b,   0xad,   0xe4,   0x128,  0x187,  0x20a,
                0x200,  0x184,  0x12c,  0xe8,   0xb3,   0x87,   0x66,   0x51,   0x4d,   0x55,   0x6d,   0x93,   0xbd,   0xf9,   0x13f,  0x1a2,  0x21d,
                0x214,  0x1a4,  0x145,  0xfd,   0xc7,   0x9f,   0x82,   0x6d,   0x66,   0x6d,   0x86,   0xa8,   0xd7,   0x10c,  0x155,  0x1bd,  0x246,
                0x242,  0x1c2,  0x161,  0x119,  0xe4,   0xb9,   0x9d,   0x8f,   0x83,   0x8d,   0xa3,   0xc4,   0xf1,   0x12a,  0x174,  0x1e1,  0x26b,
                0x261,  0x1de,  0x17f,  0x131,  0xfd,   0xd8,   0xbc,   0xac,   0x9d,   0xa9,   0xbe,   0xe0,   0x109,  0x142,  0x193,  0x208,  0x28f,
            },

            //Bgain:
            {
                0x28e,  0x202,  0x186,  0x12f,  0xfb,   0xcc,   0xb4,   0xa4,   0xa4,   0xa9,   0xba,   0xe2,   0x120,  0x14b,  0x1a5,  0x220,  0x2b6,
                0x251,  0x1d8,  0x16e,  0x114,  0xde,   0xb3,   0x92,   0x83,   0x81,   0x88,   0xa1,   0xbe,   0xec,   0x128,  0x17d,  0x1f1,  0x274,
                0x228,  0x1ac,  0x144,  0xfc,   0xc2,   0x97,   0x7c,   0x67,   0x61,   0x67,   0x7e,   0x9e,   0xcf,   0x107,  0x155,  0x1c9,  0x252,
                0x1fa,  0x183,  0x12a,  0xe4,   0xb0,   0x83,   0x61,   0x4d,   0x48,   0x50,   0x67,   0x86,   0xb4,   0xec,   0x133,  0x1a4,  0x22c,
                0x1da,  0x16d,  0x113,  0xcd,   0x9f,   0x70,   0x4e,   0x3a,   0x2f,   0x3c,   0x51,   0x75,   0xa0,   0xdb,   0x11e,  0x185,  0x201,
                0x1c5,  0x15d,  0x101,  0xc5,   0x8b,   0x5b,   0x41,   0x24,   0x1e,   0x27,   0x3d,   0x65,   0x93,   0xce,   0x114,  0x179,  0x1fc,
                0x1bc,  0x150,  0xfb,   0xbe,   0x87,   0x57,   0x30,   0x17,   0xd,    0x18,   0x37,   0x5f,   0x8b,   0xbf,   0x105,  0x16b,  0x1e9,
                0x1ac,  0x147,  0xf1,   0xb8,   0x80,   0x4f,   0x29,   0xf,    0x5,    0x10,   0x32,   0x5c,   0x88,   0xc2,   0x107,  0x160,  0x1d4,
                0x1af,  0x143,  0xf7,   0xb4,   0x7d,   0x4f,   0x3a,   0x7,    0x1,    0xc,    0x2f,   0x57,   0x8b,   0xc0,   0x102,  0x15f,  0x1d8,
                0x1a8,  0x147,  0xf5,   0xb6,   0x80,   0x51,   0x37,   0xc,    0x5,    0x10,   0x2f,   0x5a,   0x8b,   0xc8,   0x108,  0x163,  0x1da,
                0x1bc,  0x151,  0xfb,   0xba,   0x8a,   0x59,   0x36,   0x15,   0xf,    0x1b,   0x38,   0x62,   0x92,   0xc9,   0x10e,  0x171,  0x1ec,
                0x1cd,  0x156,  0x105,  0xc6,   0x8c,   0x66,   0x45,   0x27,   0x23,   0x27,   0x47,   0x6f,   0x9a,   0xd8,   0x115,  0x17e,  0x1ee,
                0x1da,  0x16c,  0x110,  0xd2,   0x9e,   0x78,   0x54,   0x3d,   0x38,   0x3e,   0x58,   0x78,   0xad,   0xe3,   0x126,  0x186,  0x20d,
                0x201,  0x18e,  0x12b,  0xe2,   0xb1,   0x87,   0x67,   0x54,   0x51,   0x58,   0x6c,   0x93,   0xb8,   0xf4,   0x13b,  0x1a3,  0x229,
                0x217,  0x1aa,  0x147,  0x100,  0xc8,   0xa0,   0x82,   0x6c,   0x66,   0x6c,   0x86,   0xa9,   0xd0,   0x107,  0x156,  0x1bb,  0x23b,
                0x232,  0x1c2,  0x165,  0x117,  0xe4,   0xbf,   0xa2,   0x8c,   0x85,   0x8a,   0x9f,   0xc1,   0xeb,   0x126,  0x16b,  0x1dd,  0x26c,
                0x262,  0x1ea,  0x17c,  0x132,  0xf7,   0xd2,   0xc0,   0xa9,   0x9f,   0xa5,   0xb9,   0xd3,   0x102,  0x137,  0x184,  0x206,  0x289,
            },
        },

        {
            //Rgain:
            {
                0x399,  0x2df,  0x23e,  0x1cd,  0x170,  0x135,  0xfc,   0xdb,   0xda,   0xe4,   0xfd,  0x12f,  0x16e,  0x1d4,  0x24e,  0x2ee,  0x3e2,
                0x372,  0x2b0,  0x20f,  0x19a,  0x140,  0x109,  0xdc,   0xb7,   0xaf,   0xbe,   0xd5,  0x105,  0x14c,  0x1a4,  0x225,  0x2b8,  0x384,
                0x32a,  0x276,  0x1e3,  0x174,  0x11c,  0xda,   0xaf,   0x92,   0x88,   0x97,   0xac,  0xec,   0x125,  0x180,  0x200,  0x289,  0x34f,
                0x2f6,  0x24f,  0x1bd,  0x14b,  0xfd,   0xba,   0x89,   0x6c,   0x61,   0x71,   0x89,  0xc6,   0x107,  0x15a,  0x1c7,  0x262,  0x319,
                0x2c9,  0x229,  0x1a5,  0x135,  0xdb,   0x9b,   0x6a,   0x4a,   0x3f,   0x4e,   0x6c,  0xa5,   0xeb,   0x13e,  0x1b1,  0x23d,  0x2e3,
                0x2b9,  0x211,  0x187,  0x11b,  0xc9,   0x81,   0x4d,   0x2b,   0x21,   0x2f,   0x58,  0x8f,   0xda,   0x12a,  0x196,  0x229,  0x2c8,
                0x29c,  0x1fb,  0x16e,  0x10d,  0xb5,   0x6e,   0x37,   0x11,   0x7,    0x1a,   0x46,  0x7b,   0xc3,   0x118,  0x187,  0x210,  0x2b7,
                0x2bc,  0x1f5,  0x16b,  0x106,  0xb1,   0x61,   0x2e,   0x4,    0x0,    0xe,    0x3a,  0x71,   0xba,   0x113,  0x17f,  0x206,  0x2a4,
                0x33a,  0x1f3,  0x165,  0xfd,   0xab,   0x62,   0x2d,   0x2,    0x3,    0x8,    0x35,  0x6e,   0xb6,   0x10f,  0x179,  0x202,  0x29f,
                0x2f0,  0x1e6,  0x165,  0x103,  0xac,   0x63,   0x30,   0x7,    0x1,    0xb,    0x36,  0x70,   0xb8,   0x112,  0x176,  0x208,  0x2a4,
                0x2d2,  0x1f4,  0x171,  0x106,  0xb6,   0x70,   0x38,   0x15,   0xa,    0x18,   0x40,  0x78,   0xbf,   0x11c,  0x181,  0x20c,  0x2ac,
                0x2d0,  0x202,  0x17e,  0x118,  0xc0,   0x7c,   0x4a,   0x2e,   0x1d,   0x2e,   0x4f,  0x87,   0xcd,   0x122,  0x190,  0x21a,  0x2bb,
                0x2be,  0x216,  0x194,  0x12d,  0xd9,   0x99,   0x64,   0x49,   0x3d,   0x48,   0x68,  0x9d,   0xdd,   0x13f,  0x1a3,  0x229,  0x2cf,
                0x2e4,  0x236,  0x1bb,  0x144,  0xf0,   0xb5,   0x81,   0x63,   0x62,   0x66,   0x86,  0xb7,   0xfb,   0x14e,  0x1be,  0x249,  0x2ed,
                0x30c,  0x26c,  0x1ce,  0x164,  0x110,  0xd4,   0xa4,   0x86,   0x7f,   0x86,   0xa6,  0xd7,   0x115,  0x171,  0x1da,  0x270,  0x31c,
                0x339,  0x28d,  0x1fb,  0x18d,  0x133,  0xf6,   0xc5,   0xaa,   0xa1,   0xae,   0xca,  0xf8,   0x138,  0x195,  0x210,  0x2a1,  0x355,
                0x37f,  0x2be,  0x229,  0x1b1,  0x159,  0x118,  0xeb,   0xd3,   0xc6,   0xd4,   0xed,  0x11f,  0x15d,  0x1cd,  0x23d,  0x2cc,  0x388,
            },

            //Grgain:
            {
                0x324,  0x279,  0x1f5,  0x191,  0x148,  0x113,   0xe4,   0xcd,   0xc9,   0xd4,   0xf2,  0x11f,  0x164,  0x1b6,  0x22c,  0x2ba,  0x392,
                0x2f1,  0x250,  0x1cb,  0x16c,  0x11f,  0xe9,    0xc2,   0xa8,   0xa5,   0xb1,   0xcf,  0xfa,   0x13d,  0x193,  0x208,  0x28d,  0x349,
                0x2b8,  0x225,  0x1a9,  0x148,  0xfa,   0xc5,    0x9c,   0x80,   0x7e,   0x8e,   0xa5,  0xe3,   0x11b,  0x16e,  0x1e6,  0x266,  0x316,
                0x28b,  0x201,  0x18e,  0x12a,  0xe4,   0xa5,    0x79,   0x60,   0x59,   0x6a,   0x85,  0xbf,   0xfe,   0x151,  0x1b7,  0x243,  0x2e3,
                0x26b,  0x1e5,  0x174,  0x111,  0xc4,   0x88,    0x5d,   0x40,   0x39,   0x4a,   0x69,  0xa2,   0xea,   0x137,  0x19e,  0x223,  0x2b8,
                0x253,  0x1cd,  0x159,  0xfc,   0xb2,   0x73,    0x43,   0x26,   0x1e,   0x30,   0x57,  0x90,   0xd8,   0x124,  0x188,  0x211,  0x2a4,
                0x247,  0x1bd,  0x14c,  0xf2,   0xa4,   0x65,    0x31,   0x10,   0x6,    0x1a,   0x49,  0x7c,   0xc3,   0x116,  0x17a,  0x201,  0x292,
                0x263,  0x1b6,  0x141,  0xec,   0xa1,   0x5a,    0x26,   0x3,    0x1,    0xf,    0x3f,  0x74,   0xb9,   0x111,  0x172,  0x1f3,  0x285,
                0x2dc,  0x1b4,  0x13e,  0xe6,   0x98,   0x56,    0x25,   0x1,    0x5,    0xb,    0x38,  0x71,   0xb8,   0x10e,  0x16f,  0x1ed,  0x281,
                0x291,  0x1af,  0x142,  0xe5,   0x9d,   0x5a,    0x2b,   0x7,    0x2,    0xe,    0x3c,  0x74,   0xbb,   0x10f,  0x170,  0x1f0,  0x27f,
                0x28d,  0x1b7,  0x14b,  0xee,   0xa5,   0x64,    0x35,   0x13,   0xa,    0x1c,   0x42,  0x7d,   0xbe,   0x116,  0x17b,  0x1f8,  0x28c,
                0x27e,  0x1c3,  0x156,  0xfc,   0xb1,   0x76,    0x46,   0x2e,   0x1f,   0x2f,   0x55,  0x8c,   0xd1,   0x127,  0x185,  0x207,  0x2a5,
                0x265,  0x1d8,  0x169,  0x111,  0xc5,   0x8a,    0x5c,   0x49,   0x3f,   0x4c,   0x6e,  0xa0,   0xe2,   0x13b,  0x199,  0x215,  0x2ac,
                0x282,  0x1f2,  0x188,  0x125,  0xde,   0xa5,    0x79,   0x5e,   0x63,   0x67,   0x89,  0xb8,   0xf8,   0x14c,  0x1ae,  0x231,  0x2cb,
                0x2a6,  0x221,  0x19c,  0x141,  0xfb,   0xc2,    0x9a,   0x82,   0x7d,   0x88,   0xa6,  0xd6,   0x114,  0x168,  0x1cd,  0x257,  0x2f4,
                0x2cd,  0x240,  0x1c2,  0x166,  0x11e,  0xe7,    0xbc,   0xa8,   0xa0,   0xac,   0xca,  0xf7,   0x138,  0x18a,  0x1f8,  0x27d,  0x31d,
                0x317,  0x268,  0x1ef,  0x189,  0x13b,  0x106,   0xde,   0xc9,   0xc3,   0xd3,   0xed,  0x119,  0x15a,  0x1c1,  0x221,  0x2a9,  0x357,
            },

            //Gbgain:
            {
                0x32b,  0x277,  0x1f2,  0x18f,  0x148,  0x116,   0xe3,   0xc9,   0xc9,   0xd5,   0xf1,  0x11c,  0x15a,  0x1b4,  0x22d,  0x2bd,  0x38d,
                0x2f4,  0x24d,  0x1ca,  0x16d,  0x11b,  0xea,    0xc4,   0xa8,   0xa3,   0xb3,   0xc9,  0xfb,   0x13d,  0x190,  0x204,  0x28e,  0x348,
                0x2b8,  0x221,  0x1a8,  0x149,  0xfe,   0xc5,    0x9b,   0x80,   0x7a,   0x8e,   0xa6,  0xe2,   0x119,  0x16f,  0x1e4,  0x269,  0x315,
                0x28e,  0x201,  0x18a,  0x12d,  0xe3,   0xa2,    0x78,   0x60,   0x58,   0x6c,   0x86,  0xc0,   0xfc,   0x14e,  0x1b9,  0x242,  0x2e7,
                0x270,  0x1e1,  0x178,  0x115,  0xc5,   0x8a,    0x5e,   0x41,   0x3a,   0x4b,   0x6a,  0xa2,   0xe7,   0x136,  0x19e,  0x225,  0x2bd,
                0x258,  0x1ce,  0x15c,  0xff,   0xb1,   0x75,    0x44,   0x26,   0x1e,   0x30,   0x57,  0x8d,   0xd7,   0x125,  0x18c,  0x212,  0x2a7,
                0x241,  0x1bd,  0x14f,  0xf2,   0xa5,   0x65,    0x30,   0x11,   0x7,    0x1b,   0x48,  0x7d,   0xc3,   0x118,  0x17b,  0x1ff,  0x297,
                0x26b,  0x1ba,  0x147,  0xef,   0xa1,   0x5b,    0x28,   0x4,    0x1,    0x10,   0x3e,  0x75,   0xba,   0x112,  0x171,  0x1f4,  0x28b,
                0x2de,  0x1b6,  0x140,  0xe5,   0x98,   0x5a,    0x27,   0x1,    0x5,    0xb,    0x37,  0x71,   0xb8,   0x10f,  0x171,  0x1f2,  0x27f,
                0x293,  0x1b0,  0x144,  0xe6,   0x9c,   0x5a,    0x2c,   0x7,    0x4,    0xe,    0x39,  0x74,   0xbc,   0x10f,  0x16e,  0x1f4,  0x282,
                0x285,  0x1ba,  0x14b,  0xef,   0xa5,   0x66,    0x36,   0x15,   0xb,    0x1d,   0x46,  0x7c,   0xc1,   0x117,  0x17c,  0x1f8,  0x293,
                0x27c,  0x1c5,  0x159,  0xfd,   0xb1,   0x79,    0x47,   0x2e,   0x1f,   0x33,   0x56,  0x8e,   0xce,   0x129,  0x187,  0x206,  0x295,
                0x266,  0x1db,  0x16d,  0x111,  0xc6,   0x8d,    0x5f,   0x49,   0x3f,   0x4a,   0x6f,  0xa3,   0xe1,   0x13a,  0x19c,  0x219,  0x2ac,
                0x280,  0x1f4,  0x18a,  0x126,  0xde,   0xa5,    0x7e,   0x61,   0x61,   0x67,   0x87,  0xbd,   0xf6,   0x14e,  0x1ae,  0x232,  0x2cb,
                0x2ae,  0x21f,  0x1a0,  0x141,  0xf8,   0xc4,    0x99,   0x84,   0x7f,   0x89,   0xa6,  0xd4,   0x115,  0x169,  0x1d1,  0x255,  0x2f2,
                0x2d4,  0x243,  0x1c6,  0x165,  0x11a,  0xe6,    0xc0,   0xa8,   0xa0,   0xaa,   0xca,  0xfc,   0x137,  0x18a,  0x1f9,  0x282,  0x324,
                0x310,  0x26a,  0x1f0,  0x18a,  0x13d,  0x108,   0xde,   0xca,   0xc3,   0xcf,   0xf0,  0x11d,  0x15b,  0x1c1,  0x227,  0x2aa,  0x360,
            },

            //Bgain:
            {
                0x2f0,  0x24a,  0x1d2,  0x175,  0x137,  0x105,   0xd7,   0xbd,   0xc0,   0xca,   0xec,   0x10f,  0x14b,  0x1a7,  0x21b,  0x29c,  0x35e,
                0x2b8,  0x228,  0x1ad,  0x155,  0x114,  0xe1,    0xbe,   0xa0,   0x9d,   0xad,   0xc1,   0xf3,   0x138,  0x183,  0x1f5,  0x278,  0x325,
                0x28f,  0x1fe,  0x18b,  0x138,  0xf1,   0xbc,    0x96,   0x7e,   0x78,   0x8a,   0xa2,   0xda,   0x114,  0x162,  0x1d6,  0x253,  0x2f5,
                0x25e,  0x1df,  0x171,  0x11b,  0xd7,   0x9f,    0x76,   0x5d,   0x5b,   0x69,   0x84,   0xbd,   0xf9,   0x14a,  0x1ae,  0x232,  0x2c8,
                0x249,  0x1c4,  0x15d,  0x105,  0xba,   0x83,    0x5a,   0x3c,   0x37,   0x4c,   0x67,   0x9f,   0xe7,   0x12f,  0x195,  0x214,  0x2a1,
                0x234,  0x1af,  0x141,  0xf0,   0xa8,   0x71,    0x3e,   0x23,   0x1d,   0x30,   0x58,   0x91,   0xd3,   0x122,  0x180,  0x202,  0x287,
                0x21e,  0x19d,  0x138,  0xe3,   0x9d,   0x61,    0x2e,   0xf,    0x6,    0x1a,   0x47,   0x7c,   0xbf,   0x119,  0x171,  0x1f5,  0x279,
                0x244,  0x19f,  0x133,  0xdd,   0x97,   0x56,    0x28,   0x4,    0x1,    0x11,   0x3d,   0x77,   0xbc,   0x10f,  0x16f,  0x1e9,  0x276,
                0x2a9,  0x19e,  0x12e,  0xda,   0x92,   0x54,    0x24,   0x4,    0x7,    0xd,    0x3c,   0x75,   0xb4,   0x10b,  0x168,  0x1e9,  0x271,
                0x267,  0x192,  0x128,  0xd9,   0x96,   0x56,    0x2a,   0x6,    0x7,    0x10,   0x3d,   0x74,   0xb6,   0x10c,  0x168,  0x1e4,  0x271,
                0x263,  0x19a,  0x134,  0xdd,   0x9d,   0x65,    0x37,   0x16,   0xe,    0x1f,   0x46,   0x79,   0xbd,   0x112,  0x170,  0x1ef,  0x286,
                0x254,  0x1a5,  0x143,  0xf0,   0xa7,   0x70,    0x46,   0x2e,   0x21,   0x33,   0x55,   0x90,   0xcb,   0x11d,  0x17d,  0x1f9,  0x287,
                0x236,  0x1bd,  0x153,  0x100,  0xba,   0x84,    0x57,   0x45,   0x42,   0x50,   0x6d,   0xa2,   0xde,   0x137,  0x194,  0x20a,  0x297,
                0x25b,  0x1db,  0x175,  0x115,  0xd2,   0x9b,    0x76,   0x5b,   0x5f,   0x69,   0x8a,   0xba,   0xf4,   0x149,  0x1a4,  0x226,  0x2bb,
                0x27d,  0x1fb,  0x186,  0x132,  0xef,   0xbc,    0x97,   0x81,   0x7d,   0x86,   0xa4,   0xd5,   0x112,  0x15e,  0x1bc,  0x242,  0x2da,
                0x2a9,  0x21f,  0x1aa,  0x151,  0x10e,  0xdc,    0xb7,   0xa3,   0x99,   0xaa,   0xc6,   0xee,   0x130,  0x183,  0x1f3,  0x264,  0x304,
                0x2d0,  0x245,  0x1da,  0x175,  0x12c,  0xf9,    0xdb,   0xc3,   0xbb,   0xc8,   0xe7,   0x114,  0x14d,  0x1b2,  0x218,  0x29b,  0x338,
            },
        },
    },
};



#ifdef __cplusplus
#if __cplusplus
}
#endif
#endif /* End of #ifdef __cplusplus */


#endif /* __MN34220_CMOS_EX_H_ */
