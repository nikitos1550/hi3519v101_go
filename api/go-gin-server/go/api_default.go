/*
 * Camera API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Apiinfo - Information about application
func Apiinfo(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// ChannelGet - List of availible channels
func ChannelGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// ChannelIdEnableDelete - Disable channel
func ChannelIdEnableDelete(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// ChannelIdEnablePost - Enable channel
func ChannelIdEnablePost(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// ChannelIdGet - Get information about channel
func ChannelIdGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// ChannelIdPatch - Change channel settings
func ChannelIdPatch(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// DebugGet - ???
func DebugGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// DebugMppGet - HiMPP debug
func DebugMppGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderGet - List of avalible encoders
func EncoderGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderH264Get - Get list of H.264 encoder instances
func EncoderH264Get(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderH264IdDelete - Delete H.264 encoder instance
func EncoderH264IdDelete(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderH264IdGet - Get information about H.264 encoder instance
func EncoderH264IdGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderH264IdPatch - Change H.264 encoder instance runtime settings
func EncoderH264IdPatch(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderH264Post - Configure and add H.264 encoder instance
func EncoderH264Post(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderH265Get - Get list of H.265 encoder instances
func EncoderH265Get(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderH265IdDelete - Delete H.264 encoder instance
func EncoderH265IdDelete(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderH265IdGet - Get information about H.265 encoder instance
func EncoderH265IdGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderH265IdPatch - Change H.265 encoder instance runtime settings
func EncoderH265IdPatch(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderH265Post - Configure and add H.265 encoder instance
func EncoderH265Post(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderJpegGet - Get list of JPEG encoder instances
func EncoderJpegGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderJpegIdDelete - Delete JPEG encoder instance
func EncoderJpegIdDelete(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderJpegIdGet - Get information about JPEG encoder instance
func EncoderJpegIdGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderJpegIdPatch - Change JPEG encoder instance runtime settings
func EncoderJpegIdPatch(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderJpegPost - Configure and add JPEG encoder instance
func EncoderJpegPost(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderMjpegGet - Get list of MJPEG encoder instances
func EncoderMjpegGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderMjpegIdDelete - Delete MJPEG encoder instance
func EncoderMjpegIdDelete(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderMjpegIdGet - Get information about MJPEG encoder instance
func EncoderMjpegIdGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderMjpegIdPatch - Change MJPEG encoder instance runtime settings
func EncoderMjpegIdPatch(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// EncoderMjpegPost - Configure and add MJPEG encoder instance
func EncoderMjpegPost(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// StreamerGet - List of avalible streamers
func StreamerGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// StreamerJpegOverHttpGet - TBD
func StreamerJpegOverHttpGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// StreamerRtspGet - TBD
func StreamerRtspGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// StreamerVideoToStorageGet - TBD
func StreamerVideoToStorageGet(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}

// Systeminfo - System information
func Systeminfo(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}
